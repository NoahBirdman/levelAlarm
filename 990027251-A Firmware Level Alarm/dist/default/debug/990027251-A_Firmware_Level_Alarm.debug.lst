

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed May 27 01:19:23 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F876
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000D                     	;# 
    39  000E                     	;# 
    40  000E                     	;# 
    41  000F                     	;# 
    42  0010                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0014                     	;# 
    47  0015                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001B                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  001D                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  0081                     	;# 
    61  0085                     	;# 
    62  0086                     	;# 
    63  0087                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0094                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009E                     	;# 
    74  009F                     	;# 
    75  010C                     	;# 
    76  010D                     	;# 
    77  010E                     	;# 
    78  010F                     	;# 
    79  018C                     	;# 
    80  018D                     	;# 
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135                           
   136                           	psect	idataBANK0
   137  0309                     __pidataBANK0:	
   138                           
   139                           ;initializer for _adcResult
   140  0309  3464               	retlw	100
   141  030A  3400               	retlw	0
   142                           
   143                           ;initializer for _alarmTimer
   144  030B  3464               	retlw	100
   145  030C  3400               	retlw	0
   146                           
   147                           	psect	strings
   148  02BB                     __pstrings:	
   149  02BB                     stringtab:	
   150  02BB                     __stringtab:	
   151  02BB                     stringcode:	
   152                           ;	String table - string pointers are 1 byte each
   153                           
   154  02BB                     stringdir:	
   155  02BB  3002               	movlw	high stringdir
   156  02BC  008A               	movwf	10
   157  02BD  0804               	movf	4,w
   158  02BE  0A84               	incf	4,f
   159  02BF  0782               	addwf	2,f
   160  02C0                     __stringbase:	
   161  02C0  3400               	retlw	0
   162  02C1                     __end_of__stringtab:	
   163  02C1                     _FILTERTMR_ISEMPTY:	
   164  02C1  3432               	retlw	50
   165  02C2  3400               	retlw	0
   166  02C3                     __end_of_FILTERTMR_ISEMPTY:	
   167  02C3                     _FILTERTMR_ISFULL:	
   168  02C3  3432               	retlw	50
   169  02C4  3400               	retlw	0
   170  02C5                     __end_of_FILTERTMR_ISFULL:	
   171  001F                     _ADCON0bits	set	31
   172  001E                     _ADRESH	set	30
   173  000B                     _INTCONbits	set	11
   174  0006                     _PORTB	set	6
   175  0007                     _PORTC	set	7
   176  0010                     _T1CONbits	set	16
   177  0012                     _T2CONbits	set	18
   178  0066                     _ADIF	set	102
   179  005D                     _TMR0IE	set	93
   180  005A                     _TMR0IF	set	90
   181  0060                     _TMR1IF	set	96
   182  0061                     _TMR2IF	set	97
   183  009F                     _ADCON1bits	set	159
   184  009E                     _ADRESL	set	158
   185  0081                     _OPTION_REGbits	set	129
   186  008C                     _PIE1bits	set	140
   187  0085                     _TRISA	set	133
   188  0086                     _TRISB	set	134
   189  0087                     _TRISC	set	135
   190  0466                     _ADIE	set	1126
   191  0460                     _TMR1IE	set	1120
   192  0461                     _TMR2IE	set	1121
   193                           
   194                           ; #config settings
   195  0000                     
   196                           	psect	cinit
   197  0015                     start_initialization:	
   198  0015                     __initialization:	
   199                           
   200                           ; Clear objects allocated to COMMON
   201  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   202  0016  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   203                           
   204                           ; Clear objects allocated to BANK0
   205  0017  01B2               	clrf	__pbssBANK0& (0+127)
   206  0018  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   207  0019  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   208  001A  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   209  001B  01B6               	clrf	(__pbssBANK0+4)& (0+127)
   210  001C  01B7               	clrf	(__pbssBANK0+5)& (0+127)
   211  001D  01B8               	clrf	(__pbssBANK0+6)& (0+127)
   212  001E  01B9               	clrf	(__pbssBANK0+7)& (0+127)
   213  001F  01BA               	clrf	(__pbssBANK0+8)& (0+127)
   214  0020  01BB               	clrf	(__pbssBANK0+9)& (0+127)
   215                           
   216                           ; Initialize objects allocated to BANK0
   217  0021  120A  118A  2309  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   218  0026  00BC               	movwf	__pdataBANK0& (0+127)
   219  0027  120A  118A  230A  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   220  002C  00BD               	movwf	(__pdataBANK0+1)& (0+127)
   221  002D  120A  118A  230B  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   222  0032  00BE               	movwf	(__pdataBANK0+2)& (0+127)
   223  0033  120A  118A  230C   	fcall	__pidataBANK0+3	;fetch initializer
   224  0036  00BF               	movwf	(__pdataBANK0+3)& (0+127)
   225  0037                     end_of_initialization:	
   226                           ;End of C runtime variable initialization code
   227                           
   228  0037                     __end_of__initialization:	
   229  0037  0183               	clrf	3
   230  0038  120A  118A  283B   	ljmp	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMMON
   233  007C                     __pbssCOMMON:	
   234  007C                     _alarmState:	
   235  007C                     	ds	1
   236  007D                     _lvlTwoState:	
   237  007D                     	ds	1
   238                           
   239                           	psect	bssBANK0
   240  0032                     __pbssBANK0:	
   241  0032                     _almCounter:	
   242  0032                     	ds	2
   243  0034                     _blinkCounter:	
   244  0034                     	ds	2
   245  0036                     _counter1:	
   246  0036                     	ds	2
   247  0038                     _counter2:	
   248  0038                     	ds	2
   249  003A                     _lvlOneState:	
   250  003A                     	ds	1
   251  003B                     _blinkState:	
   252  003B                     	ds	1
   253                           
   254                           	psect	dataBANK0
   255  003C                     __pdataBANK0:	
   256  003C                     _adcResult:	
   257  003C                     	ds	2
   258  003E                     _alarmTimer:	
   259  003E                     	ds	2
   260                           
   261                           	psect	cstackCOMMON
   262  0070                     __pcstackCOMMON:	
   263  0070                     ?_timer0_init:	
   264  0070                     ?_timer1_init:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_timer2_init:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_adc_init_CH0:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_timer2_start:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_adc_start:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_timer1_start:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_timer1_stop:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_timer2_stop:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ?_ISR:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?___awmod:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ___awmod@divisor:	
   295                           ; 2 bytes @ 0x0
   296                           
   297                           
   298                           ; 2 bytes @ 0x0
   299  0070                     	ds	2
   300  0072                     ___awmod@dividend:	
   301                           
   302                           ; 2 bytes @ 0x2
   303  0072                     	ds	2
   304  0074                     ??___awmod:	
   305                           
   306                           ; 0 bytes @ 0x4
   307  0074                     	ds	1
   308  0075                     ___awmod@counter:	
   309                           
   310                           ; 1 bytes @ 0x5
   311  0075                     	ds	1
   312  0076                     ___awmod@sign:	
   313                           
   314                           ; 1 bytes @ 0x6
   315  0076                     	ds	1
   316  0077                     ??_ISR:	
   317                           
   318                           ; 0 bytes @ 0x7
   319  0077                     	ds	5
   320                           
   321                           	psect	cstackBANK0
   322  0020                     __pcstackBANK0:	
   323  0020                     ??_timer0_init:	
   324  0020                     ??_timer1_init:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0020                     ??_timer2_init:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0020                     ??_adc_init_CH0:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0020                     ??_timer2_start:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0020                     ??_adc_start:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0020                     ??_timer1_start:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0020                     ??_timer1_stop:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0020                     ??_timer2_stop:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0020                     ?_blinkLed:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0020                     blinkLed@stateTwo:	
   352                           ; 0 bytes @ 0x0
   353                           
   354                           
   355                           ; 1 bytes @ 0x0
   356  0020                     	ds	1
   357  0021                     blinkLed@almState:	
   358                           
   359                           ; 1 bytes @ 0x1
   360  0021                     	ds	1
   361  0022                     blinkLed@blinkState:	
   362                           
   363                           ; 1 bytes @ 0x2
   364  0022                     	ds	1
   365  0023                     ??_blinkLed:	
   366                           
   367                           ; 0 bytes @ 0x3
   368  0023                     	ds	1
   369  0024                     blinkLed@stateOne:	
   370                           
   371                           ; 1 bytes @ 0x4
   372  0024                     	ds	1
   373  0025                     ?_main:	
   374  0025                     main@argc:	
   375                           ; 2 bytes @ 0x5
   376                           
   377                           
   378                           ; 2 bytes @ 0x5
   379  0025                     	ds	2
   380  0027                     main@argv:	
   381                           
   382                           ; 2 bytes @ 0x7
   383  0027                     	ds	2
   384  0029                     ??_main:	
   385                           
   386                           ; 0 bytes @ 0x9
   387  0029                     	ds	3
   388  002C                     main@lvlOneRead:	
   389                           
   390                           ; 1 bytes @ 0xC
   391  002C                     	ds	1
   392  002D                     main@adcDelay:	
   393                           
   394                           ; 1 bytes @ 0xD
   395  002D                     	ds	1
   396  002E                     main@i:	
   397                           
   398                           ; 2 bytes @ 0xE
   399  002E                     	ds	2
   400  0030                     main@sensorRead:	
   401                           
   402                           ; 1 bytes @ 0x10
   403  0030                     	ds	1
   404  0031                     main@lvlTwoRead:	
   405                           
   406                           ; 1 bytes @ 0x11
   407  0031                     	ds	1
   408                           
   409                           	psect	maintext
   410  003B                     __pmaintext:	
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   413 ;;
   414 ;; *************** function _main *****************
   415 ;; Defined at:
   416 ;;		line 118 in file "main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;  argc            2    5[BANK0 ] int 
   419 ;;  argv            2    7[BANK0 ] PTR PTR unsigned char 
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  i               2   14[BANK0 ] int 
   422 ;;  lvlTwoRead      1   17[BANK0 ] unsigned char 
   423 ;;  sensorRead      1   16[BANK0 ] unsigned char 
   424 ;;  adcDelay        1   13[BANK0 ] unsigned char 
   425 ;;  lvlOneRead      1   12[BANK0 ] unsigned char 
   426 ;; Return value:  Size  Location     Type
   427 ;;                  2    5[BANK0 ] int 
   428 ;; Registers used:
   429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : B00/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       4       0       0       0
   436 ;;      Locals:         0       6       0       0       0
   437 ;;      Temps:          0       3       0       0       0
   438 ;;      Totals:         0      13       0       0       0
   439 ;;Total ram usage:       13 bytes
   440 ;; Hardware stack levels required when called:    3
   441 ;; This function calls:
   442 ;;		_adc_init_CH0
   443 ;;		_adc_start
   444 ;;		_blinkLed
   445 ;;		_timer0_init
   446 ;;		_timer1_init
   447 ;;		_timer1_start
   448 ;;		_timer1_stop
   449 ;;		_timer2_init
   450 ;;		_timer2_start
   451 ;;		_timer2_stop
   452 ;; This function is called by:
   453 ;;		Startup code after reset
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _main
   459  003B                     _main:	
   460                           
   461                           ;main.c: 119: uint8_t sensorRead =0;
   462                           
   463                           ;incstack = 0
   464                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   465  003B  1283               	bcf	3,5	;RP0=0, select bank0
   466  003C  1303               	bcf	3,6	;RP1=0, select bank0
   467  003D  01B0               	clrf	main@sensorRead
   468                           
   469                           ;main.c: 120: uint8_t lvlOneRead = 0;
   470  003E  01AC               	clrf	main@lvlOneRead
   471                           
   472                           ;main.c: 121: uint8_t lvlTwoRead = 0;
   473  003F  01B1               	clrf	main@lvlTwoRead
   474                           
   475                           ;main.c: 122: uint8_t adcDelay = 0;
   476  0040  01AD               	clrf	main@adcDelay
   477                           
   478                           ;main.c: 123: int i = 0;
   479  0041  01AE               	clrf	main@i
   480  0042  01AF               	clrf	main@i+1
   481                           
   482                           ;main.c: 125: TRISA |= (1<<0);
   483  0043  1683               	bsf	3,5	;RP0=1, select bank1
   484  0044  1303               	bcf	3,6	;RP1=0, select bank1
   485  0045  1405               	bsf	5,0	;volatile
   486                           
   487                           ;main.c: 126: TRISB |= (1<<4)|(1<<5);
   488  0046  3030               	movlw	48
   489  0047  1283               	bcf	3,5	;RP0=0, select bank0
   490  0048  1303               	bcf	3,6	;RP1=0, select bank0
   491  0049  00A9               	movwf	??_main
   492  004A  0829               	movf	??_main,w
   493  004B  1683               	bsf	3,5	;RP0=1, select bank1
   494  004C  1303               	bcf	3,6	;RP1=0, select bank1
   495  004D  0486               	iorwf	6,f	;volatile
   496                           
   497                           ;main.c: 127: TRISC &= ~((1<<2)|(1<<3));
   498  004E  30F3               	movlw	243
   499  004F  1283               	bcf	3,5	;RP0=0, select bank0
   500  0050  1303               	bcf	3,6	;RP1=0, select bank0
   501  0051  00A9               	movwf	??_main
   502  0052  0829               	movf	??_main,w
   503  0053  1683               	bsf	3,5	;RP0=1, select bank1
   504  0054  1303               	bcf	3,6	;RP1=0, select bank1
   505  0055  0587               	andwf	7,f	;volatile
   506                           
   507                           ;main.c: 128: TRISB &= ~((1<<3)|(1<<2));
   508  0056  30F3               	movlw	243
   509  0057  1283               	bcf	3,5	;RP0=0, select bank0
   510  0058  1303               	bcf	3,6	;RP1=0, select bank0
   511  0059  00A9               	movwf	??_main
   512  005A  0829               	movf	??_main,w
   513  005B  1683               	bsf	3,5	;RP0=1, select bank1
   514  005C  1303               	bcf	3,6	;RP1=0, select bank1
   515  005D  0586               	andwf	6,f	;volatile
   516                           
   517                           ;main.c: 131: timer0_init();
   518  005E  120A  118A  22EB  120A  118A  	fcall	_timer0_init
   519                           
   520                           ;main.c: 132: timer1_init();
   521  0063  120A  118A  2303  120A  118A  	fcall	_timer1_init
   522                           
   523                           ;main.c: 133: timer2_init();
   524  0068  120A  118A  22E2  120A  118A  	fcall	_timer2_init
   525                           
   526                           ;main.c: 134: adc_init_CH0();
   527  006D  120A  118A  22AF  120A  118A  	fcall	_adc_init_CH0
   528                           
   529                           ;main.c: 136: PORTC |= (1<<2);
   530  0072  1283               	bcf	3,5	;RP0=0, select bank0
   531  0073  1303               	bcf	3,6	;RP1=0, select bank0
   532  0074  1507               	bsf	7,2	;volatile
   533                           
   534                           ;main.c: 137: PORTB &= ~((1<<2)|(1<<3));
   535  0075  30F3               	movlw	243
   536  0076  00A9               	movwf	??_main
   537  0077  0829               	movf	??_main,w
   538  0078  0586               	andwf	6,f	;volatile
   539                           
   540                           ;main.c: 139: timer2_start();
   541  0079  120A  118A  22D9  120A  118A  	fcall	_timer2_start
   542  007E                     l1086:	
   543                           ;main.c: 141: while(1){
   544                           
   545                           
   546                           ;main.c: 144: if(adcDelay >= 100 && ADCON0bits.GO_nDONE == 0){
   547  007E  3064               	movlw	100
   548  007F  1283               	bcf	3,5	;RP0=0, select bank0
   549  0080  1303               	bcf	3,6	;RP1=0, select bank0
   550  0081  022D               	subwf	main@adcDelay,w
   551  0082  1803               	btfsc	3,0
   552  0083  191F               	btfsc	31,2	;volatile
   553  0084  288E               	goto	l1094
   554                           
   555                           ;main.c: 145: adc_start();
   556  0085  120A  118A  22CF  120A  118A  	fcall	_adc_start
   557                           
   558                           ;main.c: 146: adcDelay = 0;
   559  008A  1283               	bcf	3,5	;RP0=0, select bank0
   560  008B  1303               	bcf	3,6	;RP1=0, select bank0
   561  008C  01AD               	clrf	main@adcDelay
   562                           
   563                           ;main.c: 147: }else {adcDelay ++;}
   564  008D  2892               	goto	l1096
   565  008E                     l1094:	
   566  008E  3001               	movlw	1
   567  008F  00A9               	movwf	??_main
   568  0090  0829               	movf	??_main,w
   569  0091  07AD               	addwf	main@adcDelay,f
   570  0092                     l1096:	
   571                           
   572                           ;main.c: 150: sensorRead = PORTB & ((1<<5) | (1<<4));
   573  0092  0806               	movf	6,w	;volatile
   574  0093  3930               	andlw	48
   575  0094  00A9               	movwf	??_main
   576  0095  0829               	movf	??_main,w
   577  0096  00B0               	movwf	main@sensorRead
   578                           
   579                           ;main.c: 151: lvlOneRead = (sensorRead & (1<<4));
   580  0097  0830               	movf	main@sensorRead,w
   581  0098  3910               	andlw	16
   582  0099  00A9               	movwf	??_main
   583  009A  0829               	movf	??_main,w
   584  009B  00AC               	movwf	main@lvlOneRead
   585                           
   586                           ;main.c: 152: lvlTwoRead = (sensorRead & (1<<5));
   587  009C  0830               	movf	main@sensorRead,w
   588  009D  3920               	andlw	32
   589  009E  00A9               	movwf	??_main
   590  009F  0829               	movf	??_main,w
   591  00A0  00B1               	movwf	main@lvlTwoRead
   592                           
   593                           ;main.c: 210: if(lvlTwoState == 0){
   594  00A1  087D               	movf	_lvlTwoState,w	;volatile
   595  00A2  1D03               	btfss	3,2
   596  00A3  28AC               	goto	l1110
   597                           
   598                           ;main.c: 211: if(lvlTwoRead > 0){
   599  00A4  0831               	movf	main@lvlTwoRead,w
   600  00A5  1903               	btfsc	3,2
   601  00A6  28A9               	goto	l1108
   602                           
   603                           ;main.c: 212: lvlTwoState = 1;
   604  00A7  3001               	movlw	1
   605  00A8  28F0               	goto	L2
   606  00A9                     l1108:	
   607                           ;main.c: 213: }else {
   608                           
   609                           
   610                           ;main.c: 214: counter2 = 0;
   611  00A9  01B8               	clrf	_counter2	;volatile
   612  00AA  01B9               	clrf	_counter2+1	;volatile
   613                           
   614                           ;main.c: 215: }
   615                           ;main.c: 218: }else if(lvlTwoState == 1){
   616  00AB  292A               	goto	l1156
   617  00AC                     l1110:	
   618  00AC  037D               	decf	_lvlTwoState,w	;volatile
   619  00AD  1D03               	btfss	3,2
   620  00AE  28D6               	goto	l1124
   621                           
   622                           ;main.c: 220: if(lvlTwoRead == 0){
   623  00AF  0831               	movf	main@lvlTwoRead,w
   624  00B0  1D03               	btfss	3,2
   625  00B1  28B6               	goto	l1116
   626                           
   627                           ;main.c: 221: counter2 = 0;
   628  00B2  01B8               	clrf	_counter2	;volatile
   629  00B3  01B9               	clrf	_counter2+1	;volatile
   630                           
   631                           ;main.c: 222: lvlTwoState = 0;
   632  00B4  01FD               	clrf	_lvlTwoState	;volatile
   633                           
   634                           ;main.c: 224: }else if(lvlTwoRead > 0 && counter2 >= FILTERTMR_ISFULL){
   635  00B5  292A               	goto	l1156
   636  00B6                     l1116:	
   637  00B6  0831               	movf	main@lvlTwoRead,w
   638  00B7  1903               	btfsc	3,2
   639  00B8  292A               	goto	l1156
   640  00B9  3003               	movlw	low (_FILTERTMR_ISFULL-__stringbase)
   641  00BA  0084               	movwf	4
   642  00BB  120A  118A  22BB  120A  118A  	fcall	stringdir
   643  00C0  00A9               	movwf	??_main
   644  00C1  120A  118A  22BB  120A  118A  	fcall	stringdir
   645  00C6  00AA               	movwf	??_main+1
   646  00C7  0839               	movf	_counter2+1,w	;volatile
   647  00C8  3A80               	xorlw	128
   648  00C9  00AB               	movwf	??_main+2
   649  00CA  082A               	movf	??_main+1,w
   650  00CB  3A80               	xorlw	128
   651  00CC  022B               	subwf	??_main+2,w
   652  00CD  1D03               	skipz
   653  00CE  28D1               	goto	u935
   654  00CF  0829               	movf	??_main,w
   655  00D0  0238               	subwf	_counter2,w	;volatile
   656  00D1                     u935:	
   657  00D1  1C03               	skipc
   658  00D2  292A               	goto	l1156
   659                           
   660                           ;main.c: 225: counter2 = 0;
   661  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   662  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   663  00D5  28ED               	goto	l1136
   664  00D6                     l1124:	
   665                           ;main.c: 228: }
   666                           ;main.c: 230: }else if(lvlTwoState == 2){
   667                           
   668                           ;main.c: 226: lvlTwoState = 2;
   669                           
   670  00D6  3002               	movlw	2
   671  00D7  067D               	xorwf	_lvlTwoState,w	;volatile
   672  00D8  1D03               	btfss	3,2
   673  00D9  28E6               	goto	l1132
   674                           
   675                           ;main.c: 232: if(lvlTwoRead == 0 && counter2 == 0){
   676  00DA  0831               	movf	main@lvlTwoRead,w
   677  00DB  1D03               	btfss	3,2
   678  00DC  292A               	goto	l1156
   679  00DD  0838               	movf	_counter2,w	;volatile
   680  00DE  0439               	iorwf	_counter2+1,w	;volatile
   681  00DF  1D03               	btfss	3,2
   682  00E0  292A               	goto	l1156
   683                           
   684                           ;main.c: 233: counter2 = 1;
   685  00E1  3001               	movlw	1
   686  00E2  00B8               	movwf	_counter2	;volatile
   687  00E3  3000               	movlw	0
   688  00E4  00B9               	movwf	_counter2+1	;volatile
   689                           
   690                           ;main.c: 237: }
   691                           ;main.c: 239: }else if(lvlTwoState == 3){
   692                           
   693                           ;main.c: 235: }else{
   694  00E5  292A               	goto	l1156
   695  00E6                     l1132:	
   696  00E6  3003               	movlw	3
   697  00E7  067D               	xorwf	_lvlTwoState,w	;volatile
   698  00E8  1D03               	btfss	3,2
   699  00E9  291E               	goto	l1150
   700                           
   701                           ;main.c: 241: if(lvlTwoRead > 0){
   702  00EA  0831               	movf	main@lvlTwoRead,w
   703  00EB  1903               	btfsc	3,2
   704  00EC  28F4               	goto	l1140
   705  00ED                     l1136:	
   706                           
   707                           ;main.c: 242: counter2 = 0;
   708  00ED  01B8               	clrf	_counter2	;volatile
   709  00EE  01B9               	clrf	_counter2+1	;volatile
   710                           
   711                           ;main.c: 243: lvlTwoState = 2;
   712  00EF  3002               	movlw	2
   713  00F0                     L2:	
   714  00F0  00A9               	movwf	??_main
   715  00F1  0829               	movf	??_main,w
   716  00F2  00FD               	movwf	_lvlTwoState	;volatile
   717                           
   718                           ;main.c: 246: }else if(lvlTwoRead == 0 && counter2 > FILTERTMR_ISEMPTY){
   719  00F3  292A               	goto	l1156
   720  00F4                     l1140:	
   721  00F4  0831               	movf	main@lvlTwoRead,w
   722  00F5  1D03               	btfss	3,2
   723  00F6  292A               	goto	l1156
   724  00F7  3001               	movlw	low (_FILTERTMR_ISEMPTY-__stringbase)
   725  00F8  0084               	movwf	4
   726  00F9  120A  118A  22BB  120A  118A  	fcall	stringdir
   727  00FE  00A9               	movwf	??_main
   728  00FF  120A  118A  22BB  120A  118A  	fcall	stringdir
   729  0104  00AA               	movwf	??_main+1
   730  0105  082A               	movf	??_main+1,w
   731  0106  3A80               	xorlw	128
   732  0107  00AB               	movwf	??_main+2
   733  0108  0839               	movf	_counter2+1,w	;volatile
   734  0109  3A80               	xorlw	128
   735  010A  022B               	subwf	??_main+2,w
   736  010B  1D03               	skipz
   737  010C  290F               	goto	u1005
   738  010D  0838               	movf	_counter2,w	;volatile
   739  010E  0229               	subwf	??_main,w
   740  010F                     u1005:	
   741  010F  1803               	skipnc
   742  0110  292A               	goto	l1156
   743                           
   744                           ;main.c: 248: counter2 = 0;
   745  0111  1283               	bcf	3,5	;RP0=0, select bank0
   746  0112  1303               	bcf	3,6	;RP1=0, select bank0
   747  0113  01B8               	clrf	_counter2	;volatile
   748  0114  01B9               	clrf	_counter2+1	;volatile
   749                           
   750                           ;main.c: 249: lvlTwoState = 4;
   751  0115  3004               	movlw	4
   752  0116  00A9               	movwf	??_main
   753  0117  0829               	movf	??_main,w
   754  0118  00FD               	movwf	_lvlTwoState	;volatile
   755                           
   756                           ;main.c: 250: alarmState = 1;
   757  0119  3001               	movlw	1
   758  011A  00A9               	movwf	??_main
   759  011B  0829               	movf	??_main,w
   760  011C  00FC               	movwf	_alarmState	;volatile
   761                           
   762                           ;main.c: 251: }
   763                           ;main.c: 254: }else if(lvlTwoState == 4){
   764  011D  292A               	goto	l1156
   765  011E                     l1150:	
   766  011E  3004               	movlw	4
   767  011F  067D               	xorwf	_lvlTwoState,w	;volatile
   768  0120  1D03               	btfss	3,2
   769  0121  292A               	goto	l1156
   770                           
   771                           ;main.c: 256: lvlTwoState = 5;
   772  0122  3005               	movlw	5
   773  0123  00A9               	movwf	??_main
   774  0124  0829               	movf	??_main,w
   775  0125  00FD               	movwf	_lvlTwoState	;volatile
   776                           
   777                           ;main.c: 257: alarmState ++;
   778  0126  3001               	movlw	1
   779  0127  00A9               	movwf	??_main
   780  0128  0829               	movf	??_main,w
   781  0129  07FC               	addwf	_alarmState,f	;volatile
   782  012A                     l1156:	
   783                           
   784                           ;main.c: 258: }
   785                           ;main.c: 262: if(alarmState >= 1){
   786  012A  087C               	movf	_alarmState,w	;volatile
   787  012B  1903               	btfsc	3,2
   788  012C  2966               	goto	l1178
   789                           
   790                           ;main.c: 264: if(almCounter == 0){
   791  012D  1283               	bcf	3,5	;RP0=0, select bank0
   792  012E  1303               	bcf	3,6	;RP1=0, select bank0
   793  012F  0832               	movf	_almCounter,w	;volatile
   794  0130  0433               	iorwf	_almCounter+1,w	;volatile
   795  0131  1D03               	btfss	3,2
   796  0132  2943               	goto	l1166
   797                           
   798                           ;main.c: 265: PORTB |= (1<<3);
   799  0133  1586               	bsf	6,3	;volatile
   800                           
   801                           ;main.c: 266: PORTC |= (1<<3);
   802  0134  1587               	bsf	7,3	;volatile
   803                           
   804                           ;main.c: 267: adc_start();
   805  0135  120A  118A  22CF  120A  118A  	fcall	_adc_start
   806                           
   807                           ;main.c: 268: timer1_start();
   808  013A  120A  118A  22C5  120A  118A  	fcall	_timer1_start
   809                           
   810                           ;main.c: 269: almCounter = 1;
   811  013F  3001               	movlw	1
   812  0140  1283               	bcf	3,5	;RP0=0, select bank0
   813  0141  1303               	bcf	3,6	;RP1=0, select bank0
   814  0142  2963               	goto	L3
   815  0143                     l1166:	
   816                           ;main.c: 271: }else if(almCounter > alarmTimer){
   817                           
   818  0143  083F               	movf	_alarmTimer+1,w	;volatile
   819  0144  3A80               	xorlw	128
   820  0145  00A9               	movwf	??_main
   821  0146  0833               	movf	_almCounter+1,w	;volatile
   822  0147  3A80               	xorlw	128
   823  0148  0229               	subwf	??_main,w
   824  0149  1D03               	skipz
   825  014A  294D               	goto	u1045
   826  014B  0832               	movf	_almCounter,w	;volatile
   827  014C  023E               	subwf	_alarmTimer,w	;volatile
   828  014D                     u1045:	
   829  014D  1803               	skipnc
   830  014E  2966               	goto	l1178
   831                           
   832                           ;main.c: 272: PORTB |= (1<<2) |(1<<3);
   833  014F  300C               	movlw	12
   834  0150  1283               	bcf	3,5	;RP0=0, select bank0
   835  0151  1303               	bcf	3,6	;RP1=0, select bank0
   836  0152  00A9               	movwf	??_main
   837  0153  0829               	movf	??_main,w
   838  0154  0486               	iorwf	6,f	;volatile
   839                           
   840                           ;main.c: 273: timer1_stop();
   841  0155  120A  118A  22F4  120A  118A  	fcall	_timer1_stop
   842                           
   843                           ;main.c: 274: timer2_stop();
   844  015A  120A  118A  22FC  120A  118A  	fcall	_timer2_stop
   845                           
   846                           ;main.c: 275: PORTC |= (1<<3);
   847  015F  1283               	bcf	3,5	;RP0=0, select bank0
   848  0160  1303               	bcf	3,6	;RP1=0, select bank0
   849  0161  1587               	bsf	7,3	;volatile
   850                           
   851                           ;main.c: 276: almCounter = 1;
   852  0162  3001               	movlw	1
   853  0163                     L3:	
   854  0163  00B2               	movwf	_almCounter	;volatile
   855  0164  3000               	movlw	0
   856  0165  00B3               	movwf	_almCounter+1	;volatile
   857  0166                     l1178:	
   858                           
   859                           ;main.c: 277: }
   860                           ;main.c: 278: }
   861                           ;main.c: 281: blinkLed(lvlOneState, lvlTwoState, alarmState, &blinkState);
   862  0166  087D               	movf	_lvlTwoState,w	;volatile
   863  0167  1283               	bcf	3,5	;RP0=0, select bank0
   864  0168  1303               	bcf	3,6	;RP1=0, select bank0
   865  0169  00A9               	movwf	??_main
   866  016A  0829               	movf	??_main,w
   867  016B  00A0               	movwf	blinkLed@stateTwo
   868  016C  087C               	movf	_alarmState,w	;volatile
   869  016D  00AA               	movwf	??_main+1
   870  016E  082A               	movf	??_main+1,w
   871  016F  00A1               	movwf	blinkLed@almState
   872  0170  303B               	movlw	(low (_blinkState| 0))& (0+255)
   873  0171  00AB               	movwf	??_main+2
   874  0172  082B               	movf	??_main+2,w
   875  0173  00A2               	movwf	blinkLed@blinkState
   876  0174  083A               	movf	_lvlOneState,w	;volatile
   877  0175  120A  118A  2284  120A  118A  	fcall	_blinkLed
   878  017A  287E               	goto	l1086
   879  017B                     l1180:	
   880                           ;main.c: 283: }
   881                           ;main.c: 287: while(1){
   882                           
   883                           
   884                           ;main.c: 288: PORTC^=(1<<2);
   885  017B  3004               	movlw	4
   886  017C  1283               	bcf	3,5	;RP0=0, select bank0
   887  017D  1303               	bcf	3,6	;RP1=0, select bank0
   888  017E  00A9               	movwf	??_main
   889  017F  0829               	movf	??_main,w
   890  0180  0687               	xorwf	7,f	;volatile
   891                           
   892                           ;main.c: 289: for(i=0;i<10000;i++);
   893  0181  01AE               	clrf	main@i
   894  0182  01AF               	clrf	main@i+1
   895  0183                     L4:	
   896  0183  082F               	movf	main@i+1,w
   897  0184  3A80               	xorlw	128
   898  0185  00FF               	movwf	127
   899  0186  30A7               	movlw	167
   900  0187  027F               	subwf	127,w
   901  0188  1D03               	skipz
   902  0189  298C               	goto	u1055
   903  018A  3010               	movlw	16
   904  018B  022E               	subwf	main@i,w
   905  018C                     u1055:	
   906  018C  1803               	btfsc	3,0
   907  018D  297B               	goto	l1180
   908  018E  3001               	movlw	1
   909  018F  1283               	bcf	3,5	;RP0=0, select bank0
   910  0190  1303               	bcf	3,6	;RP1=0, select bank0
   911  0191  07AE               	addwf	main@i,f
   912  0192  1803               	skipnc
   913  0193  0AAF               	incf	main@i+1,f
   914  0194  3000               	movlw	0
   915  0195  07AF               	addwf	main@i+1,f
   916  0196  2983               	goto	L4
   917  0197                     __end_of_main:	
   918                           ;main.c: 291: }
   919                           ;main.c: 292: return (0);
   920                           ;	Return value of _main is never used
   921                           
   922                           
   923                           	psect	text1
   924  02FC                     __ptext1:	
   925 ;; *************** function _timer2_stop *****************
   926 ;; Defined at:
   927 ;;		line 50 in file "util.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;		None               void
   934 ;; Registers used:
   935 ;;		None
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0
   944 ;;      Totals:         0       0       0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    2
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function _timer2_stop
   957  02FC                     _timer2_stop:	
   958                           
   959                           ;util.c: 51: T2CONbits.TMR2ON = 0;
   960                           
   961                           ;incstack = 0
   962                           ; Regs used in _timer2_stop: []
   963  02FC  1283               	bcf	3,5	;RP0=0, select bank0
   964  02FD  1303               	bcf	3,6	;RP1=0, select bank0
   965  02FE  1112               	bcf	18,2	;volatile
   966                           
   967                           ;util.c: 52: PIE1bits.TMR2IE = 0;
   968  02FF  1683               	bsf	3,5	;RP0=1, select bank1
   969  0300  1303               	bcf	3,6	;RP1=0, select bank1
   970  0301  108C               	bcf	12,1	;volatile
   971  0302  0008               	return
   972  0303                     __end_of_timer2_stop:	
   973                           
   974                           	psect	text2
   975  02D9                     __ptext2:	
   976 ;; *************** function _timer2_start *****************
   977 ;; Defined at:
   978 ;;		line 43 in file "util.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;		None               void
   985 ;; Registers used:
   986 ;;		None
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0
   995 ;;      Totals:         0       0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    2
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _timer2_start
  1008  02D9                     _timer2_start:	
  1009                           
  1010                           ;util.c: 44: PIE1bits.TMR2IE = 1;
  1011                           
  1012                           ;incstack = 0
  1013                           ; Regs used in _timer2_start: []
  1014  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  1015  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  1016  02DB  148C               	bsf	12,1	;volatile
  1017                           
  1018                           ;util.c: 45: T2CONbits.TMR2ON = 1;
  1019  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1020  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  1021  02DE  1512               	bsf	18,2	;volatile
  1022                           
  1023                           ;util.c: 46: INTCONbits.GIE = 1;
  1024  02DF  178B               	bsf	11,7	;volatile
  1025                           
  1026                           ;util.c: 47: INTCONbits.PEIE = 1;
  1027  02E0  170B               	bsf	11,6	;volatile
  1028  02E1  0008               	return
  1029  02E2                     __end_of_timer2_start:	
  1030                           
  1031                           	psect	text3
  1032  02E2                     __ptext3:	
  1033 ;; *************** function _timer2_init *****************
  1034 ;; Defined at:
  1035 ;;		line 38 in file "util.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;		None               void
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    2
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function _timer2_init
  1065  02E2                     _timer2_init:	
  1066                           
  1067                           ;util.c: 39: T2CONbits.T2CKPS = 0x02;
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
  1071  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1072  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1073  02E4  0812               	movf	18,w	;volatile
  1074  02E5  39FC               	andlw	-4
  1075  02E6  3802               	iorlw	2
  1076  02E7  0092               	movwf	18	;volatile
  1077                           
  1078                           ;util.c: 40: T2CONbits.TOUTPS = 0x0F;
  1079  02E8  3078               	movlw	120
  1080  02E9  0492               	iorwf	18,f	;volatile
  1081  02EA  0008               	return
  1082  02EB                     __end_of_timer2_init:	
  1083                           
  1084                           	psect	text4
  1085  02F4                     __ptext4:	
  1086 ;; *************** function _timer1_stop *****************
  1087 ;; Defined at:
  1088 ;;		line 30 in file "util.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;		None               void
  1095 ;; Registers used:
  1096 ;;		None
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0
  1105 ;;      Totals:         0       0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    2
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           
  1117                           ;psect for function _timer1_stop
  1118  02F4                     _timer1_stop:	
  1119                           
  1120                           ;util.c: 31: T1CONbits.TMR1ON = 0;
  1121                           
  1122                           ;incstack = 0
  1123                           ; Regs used in _timer1_stop: []
  1124  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1125  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1126  02F6  1010               	bcf	16,0	;volatile
  1127                           
  1128                           ;util.c: 32: T1CONbits.T1OSCEN =0;
  1129  02F7  1190               	bcf	16,3	;volatile
  1130                           
  1131                           ;util.c: 33: PIE1bits.TMR1IE = 0;
  1132  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  1133  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  1134  02FA  100C               	bcf	12,0	;volatile
  1135  02FB  0008               	return
  1136  02FC                     __end_of_timer1_stop:	
  1137                           
  1138                           	psect	text5
  1139  02C5                     __ptext5:	
  1140 ;; *************** function _timer1_start *****************
  1141 ;; Defined at:
  1142 ;;		line 20 in file "util.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;		None               void
  1149 ;; Registers used:
  1150 ;;		None
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1156 ;;      Params:         0       0       0       0       0
  1157 ;;      Locals:         0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0
  1159 ;;      Totals:         0       0       0       0       0
  1160 ;;Total ram usage:        0 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; Hardware stack levels required when called:    2
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _timer1_start
  1172  02C5                     _timer1_start:	
  1173                           
  1174                           ;util.c: 21: T1CONbits.T1OSCEN = 1;
  1175                           
  1176                           ;incstack = 0
  1177                           ; Regs used in _timer1_start: []
  1178  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1179  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1180  02C7  1590               	bsf	16,3	;volatile
  1181                           
  1182                           ;util.c: 22: T1CONbits.TMR1ON = 1;
  1183  02C8  1410               	bsf	16,0	;volatile
  1184                           
  1185                           ;util.c: 23: PIE1bits.TMR1IE = 1;
  1186  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  1187  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  1188  02CB  140C               	bsf	12,0	;volatile
  1189                           
  1190                           ;util.c: 24: INTCONbits.GIE = 1;
  1191  02CC  178B               	bsf	11,7	;volatile
  1192                           
  1193                           ;util.c: 25: INTCONbits.PEIE = 1;
  1194  02CD  170B               	bsf	11,6	;volatile
  1195  02CE  0008               	return
  1196  02CF                     __end_of_timer1_start:	
  1197                           
  1198                           	psect	text6
  1199  0303                     __ptext6:	
  1200 ;; *************** function _timer1_init *****************
  1201 ;; Defined at:
  1202 ;;		line 9 in file "util.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;		None               void
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0
  1219 ;;      Totals:         0       0       0       0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    2
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _timer1_init
  1232  0303                     _timer1_init:	
  1233                           
  1234                           ;util.c: 15: T1CONbits.T1CKPS = 0x03;
  1235                           
  1236                           ;incstack = 0
  1237                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
  1238  0303  3030               	movlw	48
  1239  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0306  0490               	iorwf	16,f	;volatile
  1242                           
  1243                           ;util.c: 16: T1CONbits.TMR1CS = 0;
  1244  0307  1090               	bcf	16,1	;volatile
  1245  0308  0008               	return
  1246  0309                     __end_of_timer1_init:	
  1247                           
  1248                           	psect	text7
  1249  02EB                     __ptext7:	
  1250 ;; *************** function _timer0_init *****************
  1251 ;; Defined at:
  1252 ;;		line 56 in file "util.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;		None               void
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    2
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _timer0_init
  1282  02EB                     _timer0_init:	
  1283                           
  1284                           ;util.c: 57: OPTION_REGbits.T0CS = 0;
  1285                           
  1286                           ;incstack = 0
  1287                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  1288  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  1289  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  1290  02ED  1281               	bcf	1,5	;volatile
  1291                           
  1292                           ;util.c: 58: OPTION_REGbits.PSA = 0;
  1293  02EE  1181               	bcf	1,3	;volatile
  1294                           
  1295                           ;util.c: 59: OPTION_REGbits.PS = 0x04;
  1296  02EF  0801               	movf	1,w	;volatile
  1297  02F0  39F8               	andlw	-8
  1298  02F1  3804               	iorlw	4
  1299  02F2  0081               	movwf	1	;volatile
  1300  02F3  0008               	return
  1301  02F4                     __end_of_timer0_init:	
  1302                           
  1303                           	psect	text8
  1304  0284                     __ptext8:	
  1305 ;; *************** function _blinkLed *****************
  1306 ;; Defined at:
  1307 ;;		line 94 in file "util.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  stateOne        1    wreg     unsigned char 
  1310 ;;  stateTwo        1    0[BANK0 ] unsigned char 
  1311 ;;  almState        1    1[BANK0 ] unsigned char 
  1312 ;;  blinkState      1    2[BANK0 ] PTR unsigned char 
  1313 ;;		 -> blinkState(1), 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  stateOne        1    4[BANK0 ] unsigned char 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;		None               void
  1318 ;; Registers used:
  1319 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1325 ;;      Params:         0       3       0       0       0
  1326 ;;      Locals:         0       1       0       0       0
  1327 ;;      Temps:          0       1       0       0       0
  1328 ;;      Totals:         0       5       0       0       0
  1329 ;;Total ram usage:        5 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    2
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           
  1340                           ;psect for function _blinkLed
  1341  0284                     _blinkLed:	
  1342                           
  1343                           ;incstack = 0
  1344                           ; Regs used in _blinkLed: [wreg-fsr0h+status,2+status,0]
  1345                           ;blinkLed@stateOne stored from wreg
  1346  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0286  00A4               	movwf	blinkLed@stateOne
  1349                           
  1350                           ;util.c: 95: if(stateOne == 1 || stateOne == 3 || stateTwo == 1 || stateTwo == 3){
  1351  0287  0324               	decf	blinkLed@stateOne,w
  1352  0288  1903               	btfsc	3,2
  1353  0289  2A95               	goto	l954
  1354  028A  3003               	movlw	3
  1355  028B  0624               	xorwf	blinkLed@stateOne,w
  1356  028C  1903               	btfsc	3,2
  1357  028D  2A95               	goto	l954
  1358  028E  0320               	decf	blinkLed@stateTwo,w
  1359  028F  1903               	btfsc	3,2
  1360  0290  2A95               	goto	l954
  1361  0291  3003               	movlw	3
  1362  0292  0620               	xorwf	blinkLed@stateTwo,w
  1363  0293  1D03               	btfss	3,2
  1364  0294  2A9B               	goto	l956
  1365  0295                     l954:	
  1366                           
  1367                           ;util.c: 96: *blinkState = 1;
  1368  0295  0822               	movf	blinkLed@blinkState,w
  1369  0296  0084               	movwf	4
  1370  0297  1383               	bcf	3,7	;select IRP bank0
  1371  0298  0180               	clrf	0
  1372  0299  0A80               	incf	0,f
  1373                           
  1374                           ;util.c: 97: }else if(almState >= 1){
  1375  029A  0008               	return
  1376  029B                     l956:	
  1377  029B  0821               	movf	blinkLed@almState,w
  1378  029C  1903               	btfsc	3,2
  1379  029D  2AA6               	goto	l960
  1380                           
  1381                           ;util.c: 98: *blinkState = 2;
  1382  029E  3002               	movlw	2
  1383  029F  00A3               	movwf	??_blinkLed
  1384  02A0  0822               	movf	blinkLed@blinkState,w
  1385  02A1  0084               	movwf	4
  1386  02A2  0823               	movf	??_blinkLed,w
  1387  02A3  1383               	bcf	3,7	;select IRP bank0
  1388  02A4  0080               	movwf	0
  1389                           
  1390                           ;util.c: 99: }else{
  1391  02A5  0008               	return
  1392  02A6                     l960:	
  1393                           
  1394                           ;util.c: 100: *blinkState = 0;
  1395  02A6  0822               	movf	blinkLed@blinkState,w
  1396  02A7  0084               	movwf	4
  1397  02A8  1383               	bcf	3,7	;select IRP bank0
  1398  02A9  0180               	clrf	0
  1399                           
  1400                           ;util.c: 101: PORTC &= ~(1<<3);
  1401  02AA  30F7               	movlw	247
  1402  02AB  00A3               	movwf	??_blinkLed
  1403  02AC  0823               	movf	??_blinkLed,w
  1404  02AD  0587               	andwf	7,f	;volatile
  1405  02AE  0008               	return
  1406  02AF                     __end_of_blinkLed:	
  1407                           
  1408                           	psect	text9
  1409  02CF                     __ptext9:	
  1410 ;; *************** function _adc_start *****************
  1411 ;; Defined at:
  1412 ;;		line 86 in file "util.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;		None               void
  1419 ;; Registers used:
  1420 ;;		None
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    2
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _adc_start
  1442  02CF                     _adc_start:	
  1443                           
  1444                           ;util.c: 87: ADCON0bits.ADON =1;
  1445                           
  1446                           ;incstack = 0
  1447                           ; Regs used in _adc_start: []
  1448  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1449  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1450  02D1  141F               	bsf	31,0	;volatile
  1451                           
  1452                           ;util.c: 88: ADCON0bits.GO_nDONE = 1;
  1453  02D2  151F               	bsf	31,2	;volatile
  1454                           
  1455                           ;util.c: 89: PIE1bits.ADIE =1;
  1456  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  1457  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  1458  02D5  170C               	bsf	12,6	;volatile
  1459                           
  1460                           ;util.c: 90: INTCONbits.GIE =1;
  1461  02D6  178B               	bsf	11,7	;volatile
  1462                           
  1463                           ;util.c: 91: INTCONbits.PEIE = 1;
  1464  02D7  170B               	bsf	11,6	;volatile
  1465  02D8  0008               	return
  1466  02D9                     __end_of_adc_start:	
  1467                           
  1468                           	psect	text10
  1469  02AF                     __ptext10:	
  1470 ;; *************** function _adc_init_CH0 *****************
  1471 ;; Defined at:
  1472 ;;		line 76 in file "util.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;		None               void
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0
  1489 ;;      Totals:         0       0       0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    2
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function _adc_init_CH0
  1502  02AF                     _adc_init_CH0:	
  1503                           
  1504                           ;util.c: 77: ADCON0bits.ADCS = 0x00;
  1505                           
  1506                           ;incstack = 0
  1507                           ; Regs used in _adc_init_CH0: [wreg+status,2+status,0]
  1508  02AF  303F               	movlw	-193
  1509  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1510  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1511  02B2  059F               	andwf	31,f	;volatile
  1512                           
  1513                           ;util.c: 78: ADCON0bits.CHS = 0x00;
  1514  02B3  30C7               	movlw	-57
  1515  02B4  059F               	andwf	31,f	;volatile
  1516                           
  1517                           ;util.c: 80: ADCON1bits.ADFM = 1;
  1518  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  1519  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  1520  02B7  179F               	bsf	31,7	;volatile
  1521                           
  1522                           ;util.c: 81: ADCON1bits.PCFG = 0x00;
  1523  02B8  30F0               	movlw	-16
  1524  02B9  059F               	andwf	31,f	;volatile
  1525  02BA  0008               	return
  1526  02BB                     __end_of_adc_init_CH0:	
  1527                           
  1528                           	psect	text11
  1529  0197                     __ptext11:	
  1530 ;; *************** function _ISR *****************
  1531 ;; Defined at:
  1532 ;;		line 63 in file "main.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;		None               void
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0, pclath, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       0       0       0       0
  1547 ;;      Locals:         0       0       0       0       0
  1548 ;;      Temps:          5       0       0       0       0
  1549 ;;      Totals:         5       0       0       0       0
  1550 ;;Total ram usage:        5 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    1
  1553 ;; This function calls:
  1554 ;;		___awmod
  1555 ;; This function is called by:
  1556 ;;		Interrupt level 1
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           
  1561                           ;psect for function _ISR
  1562  0197                     _ISR:	
  1563                           
  1564                           ;main.c: 68: if(TMR0IF && TMR0IE){
  1565  0197  190B               	btfsc	11,2	;volatile
  1566  0198  1E8B               	btfss	11,5	;volatile
  1567  0199  29D2               	goto	i1l1022
  1568                           
  1569                           ;main.c: 69: blinkCounter ++;
  1570  019A  3001               	movlw	1
  1571  019B  07B4               	addwf	_blinkCounter,f	;volatile
  1572  019C  1803               	skipnc
  1573  019D  0AB5               	incf	_blinkCounter+1,f	;volatile
  1574  019E  3000               	movlw	0
  1575  019F  07B5               	addwf	_blinkCounter+1,f	;volatile
  1576                           
  1577                           ;main.c: 70: if((blinkState == 1) && (blinkCounter % 5 == 0)){
  1578  01A0  033B               	decf	_blinkState,w	;volatile
  1579  01A1  1D03               	btfss	3,2
  1580  01A2  29B4               	goto	i1l1014
  1581  01A3  3005               	movlw	5
  1582  01A4  00F0               	movwf	___awmod@divisor
  1583  01A5  3000               	movlw	0
  1584  01A6  00F1               	movwf	___awmod@divisor+1
  1585  01A7  0835               	movf	_blinkCounter+1,w	;volatile
  1586  01A8  00F3               	movwf	___awmod@dividend+1
  1587  01A9  0834               	movf	_blinkCounter,w	;volatile
  1588  01AA  00F2               	movwf	___awmod@dividend
  1589  01AB  120A  118A  2239  120A  118A  	fcall	___awmod
  1590  01B0  0870               	movf	?___awmod,w
  1591  01B1  0471               	iorwf	?___awmod+1,w
  1592  01B2  1903               	btfsc	3,2
  1593  01B3  29CB               	goto	i1l1018
  1594  01B4                     i1l1014:	
  1595                           ;main.c: 72: }else if((blinkState == 4) && (blinkCounter % 10 == 0)){
  1596                           
  1597                           ;main.c: 71: PORTC ^= (1<<3);
  1598                           
  1599  01B4  3004               	movlw	4
  1600  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1601  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1602  01B7  063B               	xorwf	_blinkState,w	;volatile
  1603  01B8  1D03               	btfss	3,2
  1604  01B9  29D1               	goto	i1l1020
  1605  01BA  300A               	movlw	10
  1606  01BB  00F0               	movwf	___awmod@divisor
  1607  01BC  3000               	movlw	0
  1608  01BD  00F1               	movwf	___awmod@divisor+1
  1609  01BE  0835               	movf	_blinkCounter+1,w	;volatile
  1610  01BF  00F3               	movwf	___awmod@dividend+1
  1611  01C0  0834               	movf	_blinkCounter,w	;volatile
  1612  01C1  00F2               	movwf	___awmod@dividend
  1613  01C2  120A  118A  2239  120A  118A  	fcall	___awmod
  1614  01C7  0870               	movf	?___awmod,w
  1615  01C8  0471               	iorwf	?___awmod+1,w
  1616  01C9  1D03               	btfss	3,2
  1617  01CA  29D1               	goto	i1l1020
  1618  01CB                     i1l1018:	
  1619                           
  1620                           ;main.c: 73: PORTC ^= (1<<3);
  1621  01CB  3008               	movlw	8
  1622  01CC  00F7               	movwf	??_ISR
  1623  01CD  0877               	movf	??_ISR,w
  1624  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1625  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1626  01D0  0687               	xorwf	7,f	;volatile
  1627  01D1                     i1l1020:	
  1628                           
  1629                           ;main.c: 74: }
  1630                           ;main.c: 75: TMR0IF = 0;
  1631  01D1  110B               	bcf	11,2	;volatile
  1632  01D2                     i1l1022:	
  1633                           
  1634                           ;main.c: 76: }
  1635                           ;main.c: 79: if(TMR1IE && TMR1IF){
  1636  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1637  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  1638  01D4  1C0C               	btfss	12,0	;volatile
  1639  01D5  29F3               	goto	i1l1036
  1640  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1641  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1642  01D8  1C0C               	btfss	12,0	;volatile
  1643  01D9  29F3               	goto	i1l1036
  1644                           
  1645                           ;main.c: 80: PORTC ^= (1<<3);
  1646  01DA  3008               	movlw	8
  1647  01DB  00F7               	movwf	??_ISR
  1648  01DC  0877               	movf	??_ISR,w
  1649  01DD  0687               	xorwf	7,f	;volatile
  1650                           
  1651                           ;main.c: 82: if(alarmState == 2){
  1652  01DE  3002               	movlw	2
  1653  01DF  067C               	xorwf	_alarmState,w	;volatile
  1654  01E0  1D03               	btfss	3,2
  1655  01E1  29E8               	goto	i1l1030
  1656                           
  1657                           ;main.c: 83: almCounter ++;
  1658  01E2  3001               	movlw	1
  1659  01E3  07B2               	addwf	_almCounter,f	;volatile
  1660  01E4  1803               	skipnc
  1661  01E5  0AB3               	incf	_almCounter+1,f	;volatile
  1662  01E6  3000               	movlw	0
  1663  01E7  07B3               	addwf	_almCounter+1,f	;volatile
  1664  01E8                     i1l1030:	
  1665                           
  1666                           ;main.c: 84: }
  1667                           ;main.c: 85: if(alarmState == 3){
  1668  01E8  3003               	movlw	3
  1669  01E9  067C               	xorwf	_alarmState,w	;volatile
  1670  01EA  1D03               	btfss	3,2
  1671  01EB  29F2               	goto	i1l1034
  1672                           
  1673                           ;main.c: 86: almCounter += 2;
  1674  01EC  3002               	movlw	2
  1675  01ED  07B2               	addwf	_almCounter,f	;volatile
  1676  01EE  1803               	skipnc
  1677  01EF  0AB3               	incf	_almCounter+1,f	;volatile
  1678  01F0  3000               	movlw	0
  1679  01F1  07B3               	addwf	_almCounter+1,f	;volatile
  1680  01F2                     i1l1034:	
  1681                           
  1682                           ;main.c: 87: }
  1683                           ;main.c: 88: TMR1IF = 0;
  1684  01F2  100C               	bcf	12,0	;volatile
  1685  01F3                     i1l1036:	
  1686                           
  1687                           ;main.c: 89: }
  1688                           ;main.c: 92: if(TMR2IF && TMR2IE){
  1689  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1690  01F4  1C8C               	btfss	12,1	;volatile
  1691  01F5  2A17               	goto	i1l1054
  1692  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  1693  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  1694  01F8  1C8C               	btfss	12,1	;volatile
  1695  01F9  2A17               	goto	i1l1054
  1696                           
  1697                           ;main.c: 93: if(lvlOneState == 1 || lvlOneState == 3){
  1698  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1699  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1700  01FC  033A               	decf	_lvlOneState,w	;volatile
  1701  01FD  1903               	btfsc	3,2
  1702  01FE  2A03               	goto	i1l1044
  1703  01FF  3003               	movlw	3
  1704  0200  063A               	xorwf	_lvlOneState,w	;volatile
  1705  0201  1D03               	btfss	3,2
  1706  0202  2A09               	goto	i1l1046
  1707  0203                     i1l1044:	
  1708                           
  1709                           ;main.c: 94: counter1++;
  1710  0203  3001               	movlw	1
  1711  0204  07B6               	addwf	_counter1,f	;volatile
  1712  0205  1803               	skipnc
  1713  0206  0AB7               	incf	_counter1+1,f	;volatile
  1714  0207  3000               	movlw	0
  1715  0208  07B7               	addwf	_counter1+1,f	;volatile
  1716  0209                     i1l1046:	
  1717                           
  1718                           ;main.c: 95: }
  1719                           ;main.c: 97: if(lvlTwoState == 1 || lvlTwoState == 3){
  1720  0209  037D               	decf	_lvlTwoState,w	;volatile
  1721  020A  1903               	btfsc	3,2
  1722  020B  2A10               	goto	i1l1050
  1723  020C  3003               	movlw	3
  1724  020D  067D               	xorwf	_lvlTwoState,w	;volatile
  1725  020E  1D03               	btfss	3,2
  1726  020F  2A16               	goto	i1l1052
  1727  0210                     i1l1050:	
  1728                           
  1729                           ;main.c: 98: counter2++;
  1730  0210  3001               	movlw	1
  1731  0211  07B8               	addwf	_counter2,f	;volatile
  1732  0212  1803               	skipnc
  1733  0213  0AB9               	incf	_counter2+1,f	;volatile
  1734  0214  3000               	movlw	0
  1735  0215  07B9               	addwf	_counter2+1,f	;volatile
  1736  0216                     i1l1052:	
  1737                           
  1738                           ;main.c: 99: }
  1739                           ;main.c: 100: TMR2IF = 0;
  1740  0216  108C               	bcf	12,1	;volatile
  1741  0217                     i1l1054:	
  1742                           
  1743                           ;main.c: 101: }
  1744                           ;main.c: 104: if(ADIF && ADIE){
  1745  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1746  0218  1F0C               	btfss	12,6	;volatile
  1747  0219  2A2D               	goto	i1l94
  1748  021A  1683               	bsf	3,5	;RP0=1, select bank1
  1749  021B  1303               	bcf	3,6	;RP1=0, select bank1
  1750  021C  1F0C               	btfss	12,6	;volatile
  1751  021D  2A2D               	goto	i1l94
  1752                           
  1753                           ;main.c: 105: adcResult = (ADRESH <<8) | (ADRESL);
  1754  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1755  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0220  081E               	movf	30,w	;volatile
  1757  0221  00BD               	movwf	_adcResult+1	;volatile
  1758  0222  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0223  1303               	bcf	3,6	;RP1=0, select bank1
  1760  0224  081E               	movf	30,w	;volatile
  1761  0225  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0226  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0227  00BC               	movwf	_adcResult	;volatile
  1764                           
  1765                           ;main.c: 107: alarmTimer = 20;
  1766  0228  3014               	movlw	20
  1767  0229  00BE               	movwf	_alarmTimer	;volatile
  1768  022A  3000               	movlw	0
  1769  022B  00BF               	movwf	_alarmTimer+1	;volatile
  1770                           
  1771                           ;main.c: 108: ADIF = 0;
  1772  022C  130C               	bcf	12,6	;volatile
  1773  022D                     i1l94:	
  1774  022D  087B               	movf	??_ISR+4,w
  1775  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1776  022F  00FF               	movwf	127
  1777  0230  087A               	movf	??_ISR+3,w
  1778  0231  008A               	movwf	10
  1779  0232  0879               	movf	??_ISR+2,w
  1780  0233  0084               	movwf	4
  1781  0234  0E78               	swapf	(??_ISR+1)^(0+-128),w
  1782  0235  0083               	movwf	3
  1783  0236  0EFE               	swapf	126,f
  1784  0237  0E7E               	swapf	126,w
  1785  0238  0009               	retfie
  1786  0239                     __end_of_ISR:	
  1787                           
  1788                           	psect	intentry
  1789  0004                     __pintentry:	
  1790                           ;incstack = 0
  1791                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1792                           
  1793  0004                     interrupt_function:	
  1794  007E                     saved_w	set	btemp
  1795  0004  00FE               	movwf	btemp
  1796  0005  0E03               	swapf	3,w
  1797  0006  00F8               	movwf	??_ISR+1
  1798  0007  0804               	movf	4,w
  1799  0008  00F9               	movwf	??_ISR+2
  1800  0009  080A               	movf	10,w
  1801  000A  00FA               	movwf	??_ISR+3
  1802  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1803  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1804  000D  087F               	movf	btemp+1,w
  1805  000E  00FB               	movwf	??_ISR+4
  1806  000F  120A  118A  2997   	ljmp	_ISR
  1807                           
  1808                           	psect	text12
  1809  0239                     __ptext12:	
  1810 ;; *************** function ___awmod *****************
  1811 ;; Defined at:
  1812 ;;		line 6 in file "/opt/microchip/xc8/v1.34/sources/common/awmod.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  divisor         2    0[COMMON] int 
  1815 ;;  dividend        2    2[COMMON] int 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  sign            1    6[COMMON] unsigned char 
  1818 ;;  counter         1    5[COMMON] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  2    0[COMMON] int 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1828 ;;      Params:         4       0       0       0       0
  1829 ;;      Locals:         2       0       0       0       0
  1830 ;;      Temps:          1       0       0       0       0
  1831 ;;      Totals:         7       0       0       0       0
  1832 ;;Total ram usage:        7 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_ISR
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           
  1842                           ;psect for function ___awmod
  1843  0239                     ___awmod:	
  1844                           
  1845                           ;incstack = 0
  1846                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1847  0239  01F6               	clrf	___awmod@sign
  1848  023A  1FF3               	btfss	___awmod@dividend+1,7
  1849  023B  2A43               	goto	i1l972
  1850  023C  09F2               	comf	___awmod@dividend,f
  1851  023D  09F3               	comf	___awmod@dividend+1,f
  1852  023E  0AF2               	incf	___awmod@dividend,f
  1853  023F  1903               	skipnz
  1854  0240  0AF3               	incf	___awmod@dividend+1,f
  1855  0241  01F6               	clrf	___awmod@sign
  1856  0242  0AF6               	incf	___awmod@sign,f
  1857  0243                     i1l972:	
  1858  0243  1FF1               	btfss	___awmod@divisor+1,7
  1859  0244  2A4A               	goto	i1l976
  1860  0245  09F0               	comf	___awmod@divisor,f
  1861  0246  09F1               	comf	___awmod@divisor+1,f
  1862  0247  0AF0               	incf	___awmod@divisor,f
  1863  0248  1903               	skipnz
  1864  0249  0AF1               	incf	___awmod@divisor+1,f
  1865  024A                     i1l976:	
  1866  024A  0870               	movf	___awmod@divisor,w
  1867  024B  0471               	iorwf	___awmod@divisor+1,w
  1868  024C  1903               	btfsc	3,2
  1869  024D  2A77               	goto	i1l994
  1870  024E  01F5               	clrf	___awmod@counter
  1871  024F  0AF5               	incf	___awmod@counter,f
  1872  0250                     i1l984:	
  1873  0250  1BF1               	btfsc	___awmod@divisor+1,7
  1874  0251  2A5E               	goto	i1l986
  1875  0252  3001               	movlw	1
  1876  0253                     u62_25:	
  1877  0253  1003               	clrc
  1878  0254  0DF0               	rlf	___awmod@divisor,f
  1879  0255  0DF1               	rlf	___awmod@divisor+1,f
  1880  0256  3EFF               	addlw	-1
  1881  0257  1D03               	skipz
  1882  0258  2A53               	goto	u62_25
  1883  0259  3001               	movlw	1
  1884  025A  00F4               	movwf	??___awmod
  1885  025B  0874               	movf	??___awmod,w
  1886  025C  07F5               	addwf	___awmod@counter,f
  1887  025D  2A50               	goto	i1l984
  1888  025E                     i1l986:	
  1889  025E  0871               	movf	___awmod@divisor+1,w
  1890  025F  0273               	subwf	___awmod@dividend+1,w
  1891  0260  1D03               	skipz
  1892  0261  2A64               	goto	u64_25
  1893  0262  0870               	movf	___awmod@divisor,w
  1894  0263  0272               	subwf	___awmod@dividend,w
  1895  0264                     u64_25:	
  1896  0264  1C03               	skipc
  1897  0265  2A6C               	goto	i1l990
  1898  0266  0870               	movf	___awmod@divisor,w
  1899  0267  02F2               	subwf	___awmod@dividend,f
  1900  0268  0871               	movf	___awmod@divisor+1,w
  1901  0269  1C03               	skipc
  1902  026A  03F3               	decf	___awmod@dividend+1,f
  1903  026B  02F3               	subwf	___awmod@dividend+1,f
  1904  026C                     i1l990:	
  1905  026C  3001               	movlw	1
  1906  026D                     u65_25:	
  1907  026D  1003               	clrc
  1908  026E  0CF1               	rrf	___awmod@divisor+1,f
  1909  026F  0CF0               	rrf	___awmod@divisor,f
  1910  0270  3EFF               	addlw	-1
  1911  0271  1D03               	skipz
  1912  0272  2A6D               	goto	u65_25
  1913  0273  3001               	movlw	1
  1914  0274  02F5               	subwf	___awmod@counter,f
  1915  0275  1D03               	btfss	3,2
  1916  0276  2A5E               	goto	i1l986
  1917  0277                     i1l994:	
  1918  0277  0876               	movf	___awmod@sign,w
  1919  0278  1903               	btfsc	3,2
  1920  0279  2A7F               	goto	i1l998
  1921  027A  09F2               	comf	___awmod@dividend,f
  1922  027B  09F3               	comf	___awmod@dividend+1,f
  1923  027C  0AF2               	incf	___awmod@dividend,f
  1924  027D  1903               	skipnz
  1925  027E  0AF3               	incf	___awmod@dividend+1,f
  1926  027F                     i1l998:	
  1927  027F  0873               	movf	___awmod@dividend+1,w
  1928  0280  00F1               	movwf	?___awmod+1
  1929  0281  0872               	movf	___awmod@dividend,w
  1930  0282  00F0               	movwf	?___awmod
  1931  0283  0008               	return
  1932  0284                     __end_of___awmod:	
  1933  007E                     btemp	set	126	;btemp
  1934  007E                     wtemp	set	126
  1935  007E                     wtemp0	set	126
  1936  0080                     wtemp1	set	128
  1937  0082                     wtemp2	set	130
  1938  0084                     wtemp3	set	132
  1939  0086                     wtemp4	set	134
  1940  0088                     wtemp5	set	136
  1941  007F                     wtemp6	set	127
  1942  007E                     ttemp	set	126
  1943  007E                     ttemp0	set	126
  1944  0081                     ttemp1	set	129
  1945  0084                     ttemp2	set	132
  1946  0087                     ttemp3	set	135
  1947  007F                     ttemp4	set	127
  1948  007E                     ltemp	set	126
  1949  007E                     ltemp0	set	126
  1950  0082                     ltemp1	set	130
  1951  0086                     ltemp2	set	134
  1952  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    4
    Data        4
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     18      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    blinkLed@blinkState	PTR unsigned char  size(1) Largest target is 1
		 -> blinkState(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awmod

Critical Paths under _main in BANK0

    _main->_blinkLed

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13     9      4     589
                                              5 BANK0     13     9      4
                       _adc_init_CH0
                          _adc_start
                           _blinkLed
                        _timer0_init
                        _timer1_init
                       _timer1_start
                        _timer1_stop
                        _timer2_init
                       _timer2_start
                        _timer2_stop
 ---------------------------------------------------------------------------------
 (1) _timer2_stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer2_start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blinkLed                                             5     2      3     335
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init_CH0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0     508
                                              7 COMMON     5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init_CH0
   _adc_start
   _blinkLed
   _timer0_init
   _timer1_init
   _timer1_start
   _timer1_stop
   _timer2_init
   _timer2_start
   _timer2_stop

 _ISR (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2E      12        0.0%
ABS                  0      0      2E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed May 27 01:19:23 2015

                        pc 0002                __CFG_CP$OFF 0000                         fsr 0004  
                      l960 02A6                        l954 0295                        l956 029B  
             __CFG_CPD$OFF 0000                        _ISR 0197                        u935 00D1  
              __CFG_WRT$ON 0000                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076               __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000  
                     ?_ISR 0070                       l1110 00AC                       l1140 00F4  
                     l1132 00E6                       l1116 00B6                       l1124 00D6  
                     l1108 00A9                       l1150 011E                       l1136 00ED  
                     l1180 017B                       l1156 012A                       l1166 0143  
                     l1094 008E                       l1086 007E                       l1096 0092  
                     l1178 0166                       _ADIE 0466                       _ADIF 0066  
                     u1005 010F                       u1045 014D                       u1055 018C  
                     i1l94 022D      __size_of_adc_init_CH0 000C               main@adcDelay 002D  
                     _main 003B                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0012                       ttemp 007E  
                     wtemp 007E                      ??_ISR 0077           blinkLed@almState 0021  
                    ?_main 0025              __CFG_WDTE$OFF 0000            __end_of___awmod 0284  
                    i1l972 0243                      i1l990 026C                      i1l984 0250  
                    i1l976 024A                      i1l986 025E                      i1l994 0277  
                    i1l998 027F                      _PORTB 0006                      _PORTC 0007  
                    u62_25 0253                      u64_25 0264                      _TRISA 0085  
                    _TRISB 0086                      u65_25 026D                      _TRISC 0087  
             _adc_init_CH0 02AF                      main@i 002E                      pclath 000A  
                    ltemp0 007E                      ltemp1 0082                      ltemp2 0086  
                    ltemp3 0080                      ttemp0 007E                      ttemp1 0081  
                    ttemp2 0084                      ttemp3 0087                      ttemp4 007F  
                    status 0003                      wtemp0 007E                      wtemp1 0080  
                    wtemp2 0082                      wtemp3 0084                      wtemp4 0086  
                    wtemp5 0088                      wtemp6 007F           blinkLed@stateOne 0024  
         blinkLed@stateTwo 0020            __initialization 0015               __end_of_main 0197  
                   ??_main 0029                     _ADRESH 001E                     _ADRESL 009E  
                   i1l1020 01D1                     i1l1030 01E8                     i1l1014 01B4  
                   i1l1022 01D2                     i1l1050 0210                     i1l1034 01F2  
                   i1l1018 01CB                     i1l1052 0216                     i1l1044 0203  
                   i1l1036 01F3                     i1l1046 0209                     i1l1054 0217  
                   _TMR0IE 005D                     _TMR0IF 005A                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR2IE 0461                     _TMR2IF 0061  
         __end_of_blinkLed 02AF             __CFG_PWRTE$OFF 0000                  ??___awmod 0074  
             ?_timer0_init 0070               ?_timer1_init 0070               ?_timer2_init 0070  
             ?_timer1_stop 0070               ?_timer2_stop 0070            ___awmod@divisor 0070  
          ___awmod@counter 0075                     saved_w 007E    __end_of__initialization 0037  
       __size_of_adc_start 000A             __pcstackCOMMON 0070               __pidataBANK0 0309  
           _OPTION_REGbits 0081                 _almCounter 0032                 __pbssBANK0 0032  
               _alarmTimer 003E                 _alarmState 007C                 __pmaintext 003B  
       blinkLed@blinkState 0022                 _blinkState 003B                 __pintentry 0004  
             _blinkCounter 0034          __end_of_adc_start 02D9                  ?_blinkLed 0020  
               __stringtab 02BB                    ___awmod 0239          _FILTERTMR_ISEMPTY 02C1  
           main@lvlOneRead 002C       __size_of_timer0_init 0009       __size_of_timer1_init 0006  
                  __ptext1 02FC                    __ptext2 02D9                    __ptext3 02E2  
                  __ptext4 02F4                    __ptext5 02C5                    __ptext6 0303  
                  __ptext7 02EB                    __ptext8 0284                    __ptext9 02CF  
     __size_of_timer2_init 0009       __size_of_timer1_stop 0008       __size_of_timer2_stop 0007  
            ?_timer1_start 0070             main@lvlTwoRead 0031              ?_timer2_start 0070  
             __size_of_ISR 00A2                  _T1CONbits 0010                  _T2CONbits 0012  
         ___awmod@dividend 0072                 ??_blinkLed 0023             main@sensorRead 0030  
     end_of_initialization 0037  __end_of_FILTERTMR_ISEMPTY 02C3             ??_timer1_start 0020  
           ??_timer2_start 0020        start_initialization 0015                __end_of_ISR 0239  
              __pdataBANK0 003C              ?_adc_init_CH0 0070                __pbssCOMMON 007C  
                ___latbits 0002                  _adcResult 003C              __pcstackBANK0 0020  
                _adc_start 02CF          __size_of_blinkLed 002B       __end_of_timer1_start 02CF  
     __end_of_timer2_start 02E2                   ?___awmod 0070                  __pstrings 02BB  
           ??_adc_init_CH0 0020           _FILTERTMR_ISFULL 02C3                 ?_adc_start 0070  
        interrupt_function 0004                   _PIE1bits 008C              ??_timer0_init 0020  
            ??_timer1_init 0020              ??_timer2_init 0020              ??_timer1_stop 0020  
            ??_timer2_stop 0020                 _ADCON0bits 001F                __stringbase 02C0  
               _ADCON1bits 009F           __size_of___awmod 004B         __end_of__stringtab 02C1  
      __end_of_timer0_init 02F4        __end_of_timer1_init 0309        __end_of_timer2_init 02EB  
      __end_of_timer1_stop 02FC        __end_of_timer2_stop 0303                   _blinkLed 0284  
                 __ptext10 02AF                   __ptext11 0197                   __ptext12 0239  
              ??_adc_start 0020      __size_of_timer1_start 000A      __size_of_timer2_start 0009  
                 _counter1 0036                   _counter2 0038              __size_of_main 015C  
     __end_of_adc_init_CH0 02BB                   main@argc 0025                   main@argv 0027  
              _lvlOneState 003A               _timer1_start 02C5               _timer2_start 02D9  
               _INTCONbits 000B                   intlevel1 0000                _lvlTwoState 007D  
                stringcode 02BB   __end_of_FILTERTMR_ISFULL 02C5                _timer0_init 02EB  
              _timer1_init 0303                _timer2_init 02E2                _timer1_stop 02F4  
              _timer2_stop 02FC                   stringdir 02BB                   stringtab 02BB  
