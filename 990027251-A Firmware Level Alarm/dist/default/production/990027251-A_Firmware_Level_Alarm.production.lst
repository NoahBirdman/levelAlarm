

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue May 26 21:18:42 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F876
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000D                     	;# 
    38  000E                     	;# 
    39  000E                     	;# 
    40  000F                     	;# 
    41  0010                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0014                     	;# 
    46  0015                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001B                     	;# 
    55  001C                     	;# 
    56  001D                     	;# 
    57  001E                     	;# 
    58  001F                     	;# 
    59  0081                     	;# 
    60  0085                     	;# 
    61  0086                     	;# 
    62  0087                     	;# 
    63  008C                     	;# 
    64  008D                     	;# 
    65  008E                     	;# 
    66  0091                     	;# 
    67  0092                     	;# 
    68  0093                     	;# 
    69  0094                     	;# 
    70  0098                     	;# 
    71  0099                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  010F                     	;# 
    78  018C                     	;# 
    79  018D                     	;# 
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134                           
   135                           	psect	idataCOMMON
   136  0261                     __pidataCOMMON:	
   137                           
   138                           ;initializer for _adcResult
   139  0261  3464               	retlw	100
   140  0262  3400               	retlw	0
   141                           
   142                           	psect	idataBANK0
   143  0263                     __pidataBANK0:	
   144                           
   145                           ;initializer for _ALARMTMR
   146  0263  3464               	retlw	100
   147  0264  3400               	retlw	0
   148                           
   149                           	psect	strings
   150  021C                     __pstrings:	
   151  021C                     stringtab:	
   152  021C                     __stringtab:	
   153  021C                     stringcode:	
   154                           ;	String table - string pointers are 1 byte each
   155                           
   156  021C                     stringdir:	
   157  021C  3002               	movlw	high stringdir
   158  021D  008A               	movwf	10
   159  021E  0804               	movf	4,w
   160  021F  0A84               	incf	4,f
   161  0220  0782               	addwf	2,f
   162  0221                     __stringbase:	
   163  0221  3400               	retlw	0
   164  0222                     __end_of__stringtab:	
   165  0222                     _FILTERTMR_ISEMPTY:	
   166  0222  3432               	retlw	50
   167  0223  3400               	retlw	0
   168  0224                     __end_of_FILTERTMR_ISEMPTY:	
   169  0224                     _FILTERTMR_ISFULL:	
   170  0224  3432               	retlw	50
   171  0225  3400               	retlw	0
   172  0226                     __end_of_FILTERTMR_ISFULL:	
   173  001F                     _ADCON0bits	set	31
   174  001E                     _ADRESH	set	30
   175  000B                     _INTCONbits	set	11
   176  0005                     _PORTA	set	5
   177  0006                     _PORTB	set	6
   178  0007                     _PORTC	set	7
   179  0010                     _T1CONbits	set	16
   180  0012                     _T2CONbits	set	18
   181  0066                     _ADIF	set	102
   182  005D                     _TMR0IE	set	93
   183  005A                     _TMR0IF	set	90
   184  0060                     _TMR1IF	set	96
   185  0061                     _TMR2IF	set	97
   186  009F                     _ADCON1bits	set	159
   187  009E                     _ADRESL	set	158
   188  0081                     _OPTION_REGbits	set	129
   189  008C                     _PIE1bits	set	140
   190  0086                     _TRISB	set	134
   191  0087                     _TRISC	set	135
   192  0466                     _ADIE	set	1126
   193  0460                     _TMR1IE	set	1120
   194  0461                     _TMR2IE	set	1121
   195                           
   196                           ; #config settings
   197  0000                     
   198                           	psect	cinit
   199  0015                     start_initialization:	
   200  0015                     __initialization:	
   201                           
   202                           ; Clear objects allocated to COMMON
   203  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   204  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   205  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   206                           
   207                           ; Clear objects allocated to BANK0
   208  0018  01AD               	clrf	__pbssBANK0& (0+127)
   209  0019  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   210  001A  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   211  001B  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   212  001C  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   213  001D  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   214                           
   215                           ; Initialize objects allocated to BANK0
   216  001E  120A  118A  2263  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   217  0023  00B3               	movwf	__pdataBANK0& (0+127)
   218  0024  120A  118A  2264  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   219  0029  00B4               	movwf	(__pdataBANK0+1)& (0+127)
   220                           
   221                           ; Initialize objects allocated to COMMON
   222  002A  120A  118A  2261  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   223  002F  00F9               	movwf	__pdataCOMMON& (0+127)
   224  0030  120A  118A  2262   	fcall	__pidataCOMMON+1	;fetch initializer
   225  0033  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   226  0034                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229  0034                     __end_of__initialization:	
   230  0034  0183               	clrf	3
   231  0035  120A  118A  2838   	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMMON
   234  0076                     __pbssCOMMON:	
   235  0076                     _counter0:	
   236  0076                     	ds	2
   237  0078                     _lvlOneState:	
   238  0078                     	ds	1
   239                           
   240                           	psect	dataCOMMON
   241  0079                     __pdataCOMMON:	
   242  0079                     _adcResult:	
   243  0079                     	ds	2
   244                           
   245                           	psect	bssBANK0
   246  002D                     __pbssBANK0:	
   247  002D                     _counter1:	
   248  002D                     	ds	2
   249  002F                     _counter2:	
   250  002F                     	ds	2
   251  0031                     _alarmState:	
   252  0031                     	ds	1
   253  0032                     _lvlTwoState:	
   254  0032                     	ds	1
   255                           
   256                           	psect	dataBANK0
   257  0033                     __pdataBANK0:	
   258  0033                     _ALARMTMR:	
   259  0033                     	ds	2
   260                           
   261                           	psect	cstackCOMMON
   262  0070                     __pcstackCOMMON:	
   263  0070                     ?_timer1_init:	
   264  0070                     ?_timer2_init:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_adc_init_CH0:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_adc_start:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_timer2_start:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_timer2_stop:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_timer1_start:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_timer1_stop:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_ISR:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ??_ISR:	
   289                           ; 0 bytes @ 0x0
   290                           
   291                           
   292                           ; 0 bytes @ 0x0
   293  0070                     	ds	6
   294                           
   295                           	psect	cstackBANK0
   296  0020                     __pcstackBANK0:	
   297  0020                     ??_timer1_init:	
   298  0020                     ??_timer2_init:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0020                     ??_adc_init_CH0:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0020                     ??_adc_start:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0020                     ??_timer2_start:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0020                     ??_timer2_stop:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  0020                     ??_timer1_start:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0020                     ??_timer1_stop:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0020                     ?_main:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0020                     main@argc:	
   323                           ; 2 bytes @ 0x0
   324                           
   325                           
   326                           ; 2 bytes @ 0x0
   327  0020                     	ds	2
   328  0022                     main@argv:	
   329                           
   330                           ; 2 bytes @ 0x2
   331  0022                     	ds	2
   332  0024                     ??_main:	
   333                           
   334                           ; 0 bytes @ 0x4
   335  0024                     	ds	3
   336  0027                     main@lvlOneRead:	
   337                           
   338                           ; 1 bytes @ 0x7
   339  0027                     	ds	1
   340  0028                     main@adcDelay:	
   341                           
   342                           ; 1 bytes @ 0x8
   343  0028                     	ds	1
   344  0029                     main@sensorRead:	
   345                           
   346                           ; 1 bytes @ 0x9
   347  0029                     	ds	1
   348  002A                     main@i:	
   349                           
   350                           ; 2 bytes @ 0xA
   351  002A                     	ds	2
   352  002C                     main@lvlTwoRead:	
   353                           
   354                           ; 1 bytes @ 0xC
   355  002C                     	ds	1
   356                           
   357                           	psect	maintext
   358  0038                     __pmaintext:	
   359 ;;
   360 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   361 ;;
   362 ;; *************** function _main *****************
   363 ;; Defined at:
   364 ;;		line 122 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;  argc            2    0[BANK0 ] int 
   367 ;;  argv            2    2[BANK0 ] PTR PTR unsigned char 
   368 ;; Auto vars:     Size  Location     Type
   369 ;;  i               2   10[BANK0 ] int 
   370 ;;  lvlTwoRead      1   12[BANK0 ] unsigned char 
   371 ;;  sensorRead      1    9[BANK0 ] unsigned char 
   372 ;;  adcDelay        1    8[BANK0 ] unsigned char 
   373 ;;  lvlOneRead      1    7[BANK0 ] unsigned char 
   374 ;; Return value:  Size  Location     Type
   375 ;;                  2    0[BANK0 ] int 
   376 ;; Registers used:
   377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : B00/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   383 ;;      Params:         0       4       0       0       0
   384 ;;      Locals:         0       6       0       0       0
   385 ;;      Temps:          0       3       0       0       0
   386 ;;      Totals:         0      13       0       0       0
   387 ;;Total ram usage:       13 bytes
   388 ;; Hardware stack levels required when called:    2
   389 ;; This function calls:
   390 ;;		_adc_init_CH0
   391 ;;		_adc_start
   392 ;;		_timer1_init
   393 ;;		_timer1_start
   394 ;;		_timer1_stop
   395 ;;		_timer2_init
   396 ;;		_timer2_start
   397 ;;		_timer2_stop
   398 ;; This function is called by:
   399 ;;		Startup code after reset
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _main
   405  0038                     _main:	
   406                           
   407                           ;main.c: 123: uint8_t sensorRead =0;
   408                           
   409                           ;incstack = 0
   410                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   411  0038  1283               	bcf	3,5	;RP0=0, select bank0
   412  0039  1303               	bcf	3,6	;RP1=0, select bank0
   413  003A  01A9               	clrf	main@sensorRead
   414                           
   415                           ;main.c: 124: uint8_t lvlOneRead = 0;
   416  003B  01A7               	clrf	main@lvlOneRead
   417                           
   418                           ;main.c: 125: uint8_t lvlTwoRead = 0;
   419  003C  01AC               	clrf	main@lvlTwoRead
   420                           
   421                           ;main.c: 126: uint8_t adcDelay = 0;
   422  003D  01A8               	clrf	main@adcDelay
   423                           
   424                           ;main.c: 127: int i = 0;
   425  003E  01AA               	clrf	main@i
   426  003F  01AB               	clrf	main@i+1
   427                           
   428                           ;main.c: 130: TRISC &= ~((1<<2)|(1<<3));
   429  0040  30F3               	movlw	243
   430  0041  00A4               	movwf	??_main
   431  0042  0824               	movf	??_main,w
   432  0043  1683               	bsf	3,5	;RP0=1, select bank1
   433  0044  1303               	bcf	3,6	;RP1=0, select bank1
   434  0045  0587               	andwf	7,f	;volatile
   435                           
   436                           ;main.c: 131: TRISB |= (1<<4)|(1<<5);
   437  0046  3030               	movlw	48
   438  0047  1283               	bcf	3,5	;RP0=0, select bank0
   439  0048  1303               	bcf	3,6	;RP1=0, select bank0
   440  0049  00A4               	movwf	??_main
   441  004A  0824               	movf	??_main,w
   442  004B  1683               	bsf	3,5	;RP0=1, select bank1
   443  004C  1303               	bcf	3,6	;RP1=0, select bank1
   444  004D  0486               	iorwf	6,f	;volatile
   445                           
   446                           ;main.c: 132: TRISB &= ~((1<<3)|(1<<2));
   447  004E  30F3               	movlw	243
   448  004F  1283               	bcf	3,5	;RP0=0, select bank0
   449  0050  1303               	bcf	3,6	;RP1=0, select bank0
   450  0051  00A4               	movwf	??_main
   451  0052  0824               	movf	??_main,w
   452  0053  1683               	bsf	3,5	;RP0=1, select bank1
   453  0054  1303               	bcf	3,6	;RP1=0, select bank1
   454  0055  0586               	andwf	6,f	;volatile
   455                           
   456                           ;main.c: 133: PORTA |= (1<<0);
   457  0056  1283               	bcf	3,5	;RP0=0, select bank0
   458  0057  1303               	bcf	3,6	;RP1=0, select bank0
   459  0058  1405               	bsf	5,0	;volatile
   460                           
   461                           ;main.c: 135: timer1_init();
   462  0059  120A  118A  225B  120A  118A  	fcall	_timer1_init
   463                           
   464                           ;main.c: 136: timer2_init();
   465  005E  120A  118A  2243  120A  118A  	fcall	_timer2_init
   466                           
   467                           ;main.c: 137: adc_init_CH0();
   468  0063  120A  118A  2210  120A  118A  	fcall	_adc_init_CH0
   469                           
   470                           ;main.c: 139: PORTC |= (1<<2);
   471  0068  1283               	bcf	3,5	;RP0=0, select bank0
   472  0069  1303               	bcf	3,6	;RP1=0, select bank0
   473  006A  1507               	bsf	7,2	;volatile
   474                           
   475                           ;main.c: 140: PORTB &= ~((1<<2)|(1<<3));
   476  006B  30F3               	movlw	243
   477  006C  00A4               	movwf	??_main
   478  006D  0824               	movf	??_main,w
   479  006E  0586               	andwf	6,f	;volatile
   480  006F                     l1071:	
   481                           ;main.c: 143: while(1){
   482                           
   483                           
   484                           ;main.c: 145: if(adcDelay == 100 && ADCON0bits.GO_nDONE == 0){
   485  006F  3064               	movlw	100
   486  0070  1283               	bcf	3,5	;RP0=0, select bank0
   487  0071  1303               	bcf	3,6	;RP1=0, select bank0
   488  0072  0628               	xorwf	main@adcDelay,w
   489  0073  1903               	btfsc	3,2
   490  0074  191F               	btfsc	31,2	;volatile
   491  0075  287F               	goto	l1079
   492                           
   493                           ;main.c: 146: adc_start();
   494  0076  120A  118A  2230  120A  118A  	fcall	_adc_start
   495                           
   496                           ;main.c: 147: adcDelay = 0;
   497  007B  1283               	bcf	3,5	;RP0=0, select bank0
   498  007C  1303               	bcf	3,6	;RP1=0, select bank0
   499  007D  01A8               	clrf	main@adcDelay
   500                           
   501                           ;main.c: 148: }else {adcDelay ++;}
   502  007E  2883               	goto	l1081
   503  007F                     l1079:	
   504  007F  3001               	movlw	1
   505  0080  00A4               	movwf	??_main
   506  0081  0824               	movf	??_main,w
   507  0082  07A8               	addwf	main@adcDelay,f
   508  0083                     l1081:	
   509                           
   510                           ;main.c: 151: sensorRead = PORTB & ((1<<5) | (1<<4));
   511  0083  0806               	movf	6,w	;volatile
   512  0084  3930               	andlw	48
   513  0085  00A4               	movwf	??_main
   514  0086  0824               	movf	??_main,w
   515  0087  00A9               	movwf	main@sensorRead
   516                           
   517                           ;main.c: 152: lvlOneRead = (sensorRead & (1<<4));
   518  0088  0829               	movf	main@sensorRead,w
   519  0089  3910               	andlw	16
   520  008A  00A4               	movwf	??_main
   521  008B  0824               	movf	??_main,w
   522  008C  00A7               	movwf	main@lvlOneRead
   523                           
   524                           ;main.c: 153: lvlTwoRead = (sensorRead & (1<<5));
   525  008D  0829               	movf	main@sensorRead,w
   526  008E  3920               	andlw	32
   527  008F  00A4               	movwf	??_main
   528  0090  0824               	movf	??_main,w
   529  0091  00AC               	movwf	main@lvlTwoRead
   530                           
   531                           ;main.c: 211: if(lvlTwoState == 0){
   532  0092  0832               	movf	_lvlTwoState,w	;volatile
   533  0093  1D03               	btfss	3,2
   534  0094  28AF               	goto	l1103
   535                           
   536                           ;main.c: 213: if((lvlTwoRead > 0) && (counter2 < 1)){
   537  0095  082C               	movf	main@lvlTwoRead,w
   538  0096  1903               	btfsc	3,2
   539  0097  2905               	goto	L3
   540  0098  0830               	movf	_counter2+1,w	;volatile
   541  0099  3A80               	xorlw	128
   542  009A  00FF               	movwf	127
   543  009B  3080               	movlw	128
   544  009C  027F               	subwf	127,w
   545  009D  1D03               	skipz
   546  009E  28A1               	goto	u675
   547  009F  3001               	movlw	1
   548  00A0  022F               	subwf	_counter2,w	;volatile
   549  00A1                     u675:	
   550  00A1  1803               	skipnc
   551  00A2  2905               	goto	L3
   552                           
   553                           ;main.c: 214: lvlTwoState = 1;
   554  00A3  3001               	movlw	1
   555  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   556  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   557  00A6  00A4               	movwf	??_main
   558  00A7  0824               	movf	??_main,w
   559  00A8  00B2               	movwf	_lvlTwoState	;volatile
   560                           
   561                           ;main.c: 215: timer2_start();
   562  00A9  120A  118A  223A  120A  118A  	fcall	_timer2_start
   563                           
   564                           ;main.c: 217: }else {
   565  00AE  2950               	goto	l1159
   566  00AF                     l1103:	
   567                           ;main.c: 221: }
   568                           ;main.c: 223: }else if(lvlTwoState == 1){
   569                           
   570                           ;main.c: 220: PORTC &= ~(1<<3);
   571                           
   572                           ;main.c: 219: counter2 = 0;
   573                           
   574                           ;main.c: 218: timer2_stop();
   575                           
   576  00AF  0332               	decf	_lvlTwoState,w	;volatile
   577  00B0  1D03               	btfss	3,2
   578  00B1  28EB               	goto	l1125
   579                           
   580                           ;main.c: 225: if(lvlTwoRead == 0){
   581  00B2  082C               	movf	main@lvlTwoRead,w
   582  00B3  1D03               	btfss	3,2
   583  00B4  28C0               	goto	l1113
   584                           
   585                           ;main.c: 226: counter2 = 0;
   586  00B5  01AF               	clrf	_counter2	;volatile
   587  00B6  01B0               	clrf	_counter2+1	;volatile
   588                           
   589                           ;main.c: 227: timer2_stop();
   590  00B7  120A  118A  2254  120A  118A  	fcall	_timer2_stop
   591                           
   592                           ;main.c: 228: lvlTwoState = 0;
   593  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   594  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   595  00BE  01B2               	clrf	_lvlTwoState	;volatile
   596                           
   597                           ;main.c: 230: }else if(lvlTwoRead > 0 && counter2 >= FILTERTMR_ISFULL){
   598  00BF  2950               	goto	l1159
   599  00C0                     l1113:	
   600  00C0  082C               	movf	main@lvlTwoRead,w
   601  00C1  1903               	btfsc	3,2
   602  00C2  2950               	goto	l1159
   603  00C3  3003               	movlw	low (_FILTERTMR_ISFULL-__stringbase)
   604  00C4  0084               	movwf	4
   605  00C5  120A  118A  221C  120A  118A  	fcall	stringdir
   606  00CA  00A4               	movwf	??_main
   607  00CB  120A  118A  221C  120A  118A  	fcall	stringdir
   608  00D0  00A5               	movwf	??_main+1
   609  00D1  0830               	movf	_counter2+1,w	;volatile
   610  00D2  3A80               	xorlw	128
   611  00D3  00A6               	movwf	??_main+2
   612  00D4  0825               	movf	??_main+1,w
   613  00D5  3A80               	xorlw	128
   614  00D6  0226               	subwf	??_main+2,w
   615  00D7  1D03               	skipz
   616  00D8  28DB               	goto	u715
   617  00D9  0824               	movf	??_main,w
   618  00DA  022F               	subwf	_counter2,w	;volatile
   619  00DB                     u715:	
   620  00DB  1C03               	skipc
   621  00DC  2950               	goto	l1159
   622                           
   623                           ;main.c: 231: timer2_stop();
   624  00DD  120A  118A  2254  120A  118A  	fcall	_timer2_stop
   625                           
   626                           ;main.c: 232: counter2 = 0;
   627  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   628  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   629  00E4  01AF               	clrf	_counter2	;volatile
   630  00E5  01B0               	clrf	_counter2+1	;volatile
   631                           
   632                           ;main.c: 233: lvlTwoState = 2;
   633  00E6  3002               	movlw	2
   634  00E7  00A4               	movwf	??_main
   635  00E8  0824               	movf	??_main,w
   636  00E9  00B2               	movwf	_lvlTwoState	;volatile
   637  00EA  290E               	goto	l1141
   638  00EB                     l1125:	
   639                           ;main.c: 235: }
   640                           ;main.c: 237: }else if(lvlTwoState == 2){
   641                           
   642                           ;main.c: 234: PORTC &= ~(1<<3);
   643                           
   644  00EB  3002               	movlw	2
   645  00EC  0632               	xorwf	_lvlTwoState,w	;volatile
   646  00ED  1D03               	btfss	3,2
   647  00EE  2944               	goto	l1153
   648                           
   649                           ;main.c: 240: if(lvlTwoRead == 0 && counter2 == 0){
   650  00EF  082C               	movf	main@lvlTwoRead,w
   651  00F0  1D03               	btfss	3,2
   652  00F1  2902               	goto	l1135
   653  00F2  082F               	movf	_counter2,w	;volatile
   654  00F3  0430               	iorwf	_counter2+1,w	;volatile
   655  00F4  1D03               	btfss	3,2
   656  00F5  2902               	goto	l1135
   657                           
   658                           ;main.c: 241: timer2_start();
   659  00F6  120A  118A  223A  120A  118A  	fcall	_timer2_start
   660                           
   661                           ;main.c: 242: counter2 = 1;
   662  00FB  3001               	movlw	1
   663  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   664  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   665  00FE  00AF               	movwf	_counter2	;volatile
   666  00FF  3000               	movlw	0
   667  0100  00B0               	movwf	_counter2+1	;volatile
   668                           
   669                           ;main.c: 245: }else if(lvlTwoRead > 0){
   670  0101  2950               	goto	l1159
   671  0102                     l1135:	
   672  0102  082C               	movf	main@lvlTwoRead,w
   673  0103  1903               	btfsc	3,2
   674  0104  2913               	goto	l1143
   675  0105                     L3:	
   676                           
   677                           ;main.c: 246: timer2_stop();
   678  0105  120A  118A  2254  120A  118A  	fcall	_timer2_stop
   679                           
   680                           ;main.c: 247: counter2 = 0;
   681  010A  1283               	bcf	3,5	;RP0=0, select bank0
   682  010B  1303               	bcf	3,6	;RP1=0, select bank0
   683  010C  01AF               	clrf	_counter2	;volatile
   684  010D  01B0               	clrf	_counter2+1	;volatile
   685  010E                     l1141:	
   686                           
   687                           ;main.c: 248: PORTC &= ~(1<<3);
   688  010E  30F7               	movlw	247
   689  010F  00A4               	movwf	??_main
   690  0110  0824               	movf	??_main,w
   691  0111  0587               	andwf	7,f	;volatile
   692                           
   693                           ;main.c: 250: }else if(lvlTwoRead == 0 && counter2 > FILTERTMR_ISEMPTY){
   694  0112  2950               	goto	l1159
   695  0113                     l1143:	
   696  0113  082C               	movf	main@lvlTwoRead,w
   697  0114  1D03               	btfss	3,2
   698  0115  2950               	goto	l1159
   699  0116  3001               	movlw	low (_FILTERTMR_ISEMPTY-__stringbase)
   700  0117  0084               	movwf	4
   701  0118  120A  118A  221C  120A  118A  	fcall	stringdir
   702  011D  00A4               	movwf	??_main
   703  011E  120A  118A  221C  120A  118A  	fcall	stringdir
   704  0123  00A5               	movwf	??_main+1
   705  0124  0825               	movf	??_main+1,w
   706  0125  3A80               	xorlw	128
   707  0126  00A6               	movwf	??_main+2
   708  0127  0830               	movf	_counter2+1,w	;volatile
   709  0128  3A80               	xorlw	128
   710  0129  0226               	subwf	??_main+2,w
   711  012A  1D03               	skipz
   712  012B  292E               	goto	u775
   713  012C  082F               	movf	_counter2,w	;volatile
   714  012D  0224               	subwf	??_main,w
   715  012E                     u775:	
   716  012E  1803               	skipnc
   717  012F  2950               	goto	l1159
   718                           
   719                           ;main.c: 252: lvlTwoState = 3;
   720  0130  3003               	movlw	3
   721  0131  1283               	bcf	3,5	;RP0=0, select bank0
   722  0132  1303               	bcf	3,6	;RP1=0, select bank0
   723  0133  00A4               	movwf	??_main
   724  0134  0824               	movf	??_main,w
   725  0135  00B2               	movwf	_lvlTwoState	;volatile
   726                           
   727                           ;main.c: 253: alarmState = 1;
   728  0136  3001               	movlw	1
   729  0137  00A4               	movwf	??_main
   730  0138  0824               	movf	??_main,w
   731  0139  00B1               	movwf	_alarmState	;volatile
   732                           
   733                           ;main.c: 254: timer2_stop();
   734  013A  120A  118A  2254  120A  118A  	fcall	_timer2_stop
   735                           
   736                           ;main.c: 255: counter2 = 0;
   737  013F  1283               	bcf	3,5	;RP0=0, select bank0
   738  0140  1303               	bcf	3,6	;RP1=0, select bank0
   739  0141  01AF               	clrf	_counter2	;volatile
   740  0142  01B0               	clrf	_counter2+1	;volatile
   741                           
   742                           ;main.c: 258: }
   743                           ;main.c: 259: }else if(lvlTwoState == 3){
   744                           
   745                           ;main.c: 256: }else{
   746  0143  2950               	goto	l1159
   747  0144                     l1153:	
   748  0144  3003               	movlw	3
   749  0145  0632               	xorwf	_lvlTwoState,w	;volatile
   750  0146  1D03               	btfss	3,2
   751  0147  2950               	goto	l1159
   752                           
   753                           ;main.c: 261: lvlTwoState = 4;
   754  0148  3004               	movlw	4
   755  0149  00A4               	movwf	??_main
   756  014A  0824               	movf	??_main,w
   757  014B  00B2               	movwf	_lvlTwoState	;volatile
   758                           
   759                           ;main.c: 262: alarmState ++;
   760  014C  3001               	movlw	1
   761  014D  00A4               	movwf	??_main
   762  014E  0824               	movf	??_main,w
   763  014F  07B1               	addwf	_alarmState,f	;volatile
   764  0150                     l1159:	
   765                           
   766                           ;main.c: 263: }
   767                           ;main.c: 267: if(alarmState >= 1){
   768  0150  1283               	bcf	3,5	;RP0=0, select bank0
   769  0151  1303               	bcf	3,6	;RP1=0, select bank0
   770  0152  0831               	movf	_alarmState,w	;volatile
   771  0153  1903               	btfsc	3,2
   772  0154  286F               	goto	l1071
   773                           
   774                           ;main.c: 269: if(counter1 == 0){
   775  0155  082D               	movf	_counter1,w	;volatile
   776  0156  042E               	iorwf	_counter1+1,w	;volatile
   777  0157  1D03               	btfss	3,2
   778  0158  2969               	goto	l1169
   779                           
   780                           ;main.c: 270: PORTB |= (1<<3);
   781  0159  1586               	bsf	6,3	;volatile
   782                           
   783                           ;main.c: 271: PORTC |= (1<<3);
   784  015A  1587               	bsf	7,3	;volatile
   785                           
   786                           ;main.c: 272: adc_start();
   787  015B  120A  118A  2230  120A  118A  	fcall	_adc_start
   788                           
   789                           ;main.c: 273: timer1_start();
   790  0160  120A  118A  2226  120A  118A  	fcall	_timer1_start
   791                           
   792                           ;main.c: 274: counter1 = 1;
   793  0165  3001               	movlw	1
   794  0166  1283               	bcf	3,5	;RP0=0, select bank0
   795  0167  1303               	bcf	3,6	;RP1=0, select bank0
   796  0168  2984               	goto	L1
   797  0169                     l1169:	
   798                           ;main.c: 276: }else if(counter1 > ALARMTMR){
   799                           
   800  0169  0834               	movf	_ALARMTMR+1,w	;volatile
   801  016A  3A80               	xorlw	128
   802  016B  00A4               	movwf	??_main
   803  016C  082E               	movf	_counter1+1,w	;volatile
   804  016D  3A80               	xorlw	128
   805  016E  0224               	subwf	??_main,w
   806  016F  1D03               	skipz
   807  0170  2973               	goto	u815
   808  0171  082D               	movf	_counter1,w	;volatile
   809  0172  0233               	subwf	_ALARMTMR,w	;volatile
   810  0173                     u815:	
   811  0173  1803               	skipnc
   812  0174  286F               	goto	l1071
   813                           
   814                           ;main.c: 277: PORTB |= (1<<2) |(1<<3);
   815  0175  300C               	movlw	12
   816  0176  1283               	bcf	3,5	;RP0=0, select bank0
   817  0177  1303               	bcf	3,6	;RP1=0, select bank0
   818  0178  00A4               	movwf	??_main
   819  0179  0824               	movf	??_main,w
   820  017A  0486               	iorwf	6,f	;volatile
   821                           
   822                           ;main.c: 278: timer1_stop();
   823  017B  120A  118A  224C  120A  118A  	fcall	_timer1_stop
   824                           
   825                           ;main.c: 279: PORTC |= (1<<3);
   826  0180  1283               	bcf	3,5	;RP0=0, select bank0
   827  0181  1303               	bcf	3,6	;RP1=0, select bank0
   828  0182  1587               	bsf	7,3	;volatile
   829                           
   830                           ;main.c: 280: counter1 = 1;
   831  0183  3001               	movlw	1
   832  0184                     L1:	
   833  0184  00AD               	movwf	_counter1	;volatile
   834  0185  3000               	movlw	0
   835  0186  00AE               	movwf	_counter1+1	;volatile
   836  0187  286F               	goto	l1071
   837  0188                     l1179:	
   838                           ;main.c: 281: }
   839                           ;main.c: 282: }
   840                           ;main.c: 285: }
   841                           ;main.c: 287: while(1){
   842                           
   843                           
   844                           ;main.c: 288: PORTC^=(1<<2);
   845  0188  3004               	movlw	4
   846  0189  1283               	bcf	3,5	;RP0=0, select bank0
   847  018A  1303               	bcf	3,6	;RP1=0, select bank0
   848  018B  00A4               	movwf	??_main
   849  018C  0824               	movf	??_main,w
   850  018D  0687               	xorwf	7,f	;volatile
   851                           
   852                           ;main.c: 289: for(i=0;i<10000;i++);
   853  018E  01AA               	clrf	main@i
   854  018F  01AB               	clrf	main@i+1
   855  0190                     L2:	
   856  0190  082B               	movf	main@i+1,w
   857  0191  3A80               	xorlw	128
   858  0192  00FF               	movwf	127
   859  0193  30A7               	movlw	167
   860  0194  027F               	subwf	127,w
   861  0195  1D03               	skipz
   862  0196  2999               	goto	u825
   863  0197  3010               	movlw	16
   864  0198  022A               	subwf	main@i,w
   865  0199                     u825:	
   866  0199  1803               	btfsc	3,0
   867  019A  2988               	goto	l1179
   868  019B  3001               	movlw	1
   869  019C  1283               	bcf	3,5	;RP0=0, select bank0
   870  019D  1303               	bcf	3,6	;RP1=0, select bank0
   871  019E  07AA               	addwf	main@i,f
   872  019F  1803               	skipnc
   873  01A0  0AAB               	incf	main@i+1,f
   874  01A1  3000               	movlw	0
   875  01A2  07AB               	addwf	main@i+1,f
   876  01A3  2990               	goto	L2
   877  01A4                     __end_of_main:	
   878                           ;main.c: 291: }
   879                           ;main.c: 292: return (0);
   880                           ;	Return value of _main is never used
   881                           
   882                           
   883                           	psect	text1
   884  0254                     __ptext1:	
   885 ;; *************** function _timer2_stop *****************
   886 ;; Defined at:
   887 ;;		line 48 in file "util.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;		None               void
   894 ;; Registers used:
   895 ;;		None
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0
   903 ;;      Temps:          0       0       0       0       0
   904 ;;      Totals:         0       0       0       0       0
   905 ;;Total ram usage:        0 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function _timer2_stop
   917  0254                     _timer2_stop:	
   918                           
   919                           ;util.c: 49: T2CONbits.TMR2ON = 0;
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _timer2_stop: []
   923  0254  1283               	bcf	3,5	;RP0=0, select bank0
   924  0255  1303               	bcf	3,6	;RP1=0, select bank0
   925  0256  1112               	bcf	18,2	;volatile
   926                           
   927                           ;util.c: 50: PIE1bits.TMR2IE = 0;
   928  0257  1683               	bsf	3,5	;RP0=1, select bank1
   929  0258  1303               	bcf	3,6	;RP1=0, select bank1
   930  0259  108C               	bcf	12,1	;volatile
   931  025A  0008               	return
   932  025B                     __end_of_timer2_stop:	
   933                           
   934                           	psect	text2
   935  023A                     __ptext2:	
   936 ;; *************** function _timer2_start *****************
   937 ;; Defined at:
   938 ;;		line 41 in file "util.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;		None               void
   945 ;; Registers used:
   946 ;;		None
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0
   955 ;;      Totals:         0       0       0       0       0
   956 ;;Total ram usage:        0 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _timer2_start
   968  023A                     _timer2_start:	
   969                           
   970                           ;util.c: 42: PIE1bits.TMR2IE = 1;
   971                           
   972                           ;incstack = 0
   973                           ; Regs used in _timer2_start: []
   974  023A  1683               	bsf	3,5	;RP0=1, select bank1
   975  023B  1303               	bcf	3,6	;RP1=0, select bank1
   976  023C  148C               	bsf	12,1	;volatile
   977                           
   978                           ;util.c: 43: T2CONbits.TMR2ON = 1;
   979  023D  1283               	bcf	3,5	;RP0=0, select bank0
   980  023E  1303               	bcf	3,6	;RP1=0, select bank0
   981  023F  1512               	bsf	18,2	;volatile
   982                           
   983                           ;util.c: 44: INTCONbits.GIE = 1;
   984  0240  178B               	bsf	11,7	;volatile
   985                           
   986                           ;util.c: 45: INTCONbits.PEIE = 1;
   987  0241  170B               	bsf	11,6	;volatile
   988  0242  0008               	return
   989  0243                     __end_of_timer2_start:	
   990                           
   991                           	psect	text3
   992  0243                     __ptext3:	
   993 ;; *************** function _timer2_init *****************
   994 ;; Defined at:
   995 ;;		line 36 in file "util.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;		None               void
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    1
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _timer2_init
  1025  0243                     _timer2_init:	
  1026                           
  1027                           ;util.c: 37: T2CONbits.T2CKPS = 0x02;
  1028                           
  1029                           ;incstack = 0
  1030                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
  1031  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0245  0812               	movf	18,w	;volatile
  1034  0246  39FC               	andlw	-4
  1035  0247  3802               	iorlw	2
  1036  0248  0092               	movwf	18	;volatile
  1037                           
  1038                           ;util.c: 38: T2CONbits.TOUTPS = 0x0F;
  1039  0249  3078               	movlw	120
  1040  024A  0492               	iorwf	18,f	;volatile
  1041  024B  0008               	return
  1042  024C                     __end_of_timer2_init:	
  1043                           
  1044                           	psect	text4
  1045  024C                     __ptext4:	
  1046 ;; *************** function _timer1_stop *****************
  1047 ;; Defined at:
  1048 ;;		line 28 in file "util.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;		None               void
  1055 ;; Registers used:
  1056 ;;		None
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1062 ;;      Params:         0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           
  1077                           ;psect for function _timer1_stop
  1078  024C                     _timer1_stop:	
  1079                           
  1080                           ;util.c: 29: T1CONbits.TMR1ON = 0;
  1081                           
  1082                           ;incstack = 0
  1083                           ; Regs used in _timer1_stop: []
  1084  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1085  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1086  024E  1010               	bcf	16,0	;volatile
  1087                           
  1088                           ;util.c: 30: T1CONbits.T1OSCEN =0;
  1089  024F  1190               	bcf	16,3	;volatile
  1090                           
  1091                           ;util.c: 31: PIE1bits.TMR1IE = 0;
  1092  0250  1683               	bsf	3,5	;RP0=1, select bank1
  1093  0251  1303               	bcf	3,6	;RP1=0, select bank1
  1094  0252  100C               	bcf	12,0	;volatile
  1095  0253  0008               	return
  1096  0254                     __end_of_timer1_stop:	
  1097                           
  1098                           	psect	text5
  1099  0226                     __ptext5:	
  1100 ;; *************** function _timer1_start *****************
  1101 ;; Defined at:
  1102 ;;		line 18 in file "util.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;		None               void
  1109 ;; Registers used:
  1110 ;;		None
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    1
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           
  1131                           ;psect for function _timer1_start
  1132  0226                     _timer1_start:	
  1133                           
  1134                           ;util.c: 19: T1CONbits.T1OSCEN = 1;
  1135                           
  1136                           ;incstack = 0
  1137                           ; Regs used in _timer1_start: []
  1138  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0228  1590               	bsf	16,3	;volatile
  1141                           
  1142                           ;util.c: 20: T1CONbits.TMR1ON = 1;
  1143  0229  1410               	bsf	16,0	;volatile
  1144                           
  1145                           ;util.c: 21: PIE1bits.TMR1IE = 1;
  1146  022A  1683               	bsf	3,5	;RP0=1, select bank1
  1147  022B  1303               	bcf	3,6	;RP1=0, select bank1
  1148  022C  140C               	bsf	12,0	;volatile
  1149                           
  1150                           ;util.c: 22: INTCONbits.GIE = 1;
  1151  022D  178B               	bsf	11,7	;volatile
  1152                           
  1153                           ;util.c: 23: INTCONbits.PEIE = 1;
  1154  022E  170B               	bsf	11,6	;volatile
  1155  022F  0008               	return
  1156  0230                     __end_of_timer1_start:	
  1157                           
  1158                           	psect	text6
  1159  025B                     __ptext6:	
  1160 ;; *************** function _timer1_init *****************
  1161 ;; Defined at:
  1162 ;;		line 7 in file "util.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;		None               void
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         0       0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0
  1179 ;;      Totals:         0       0       0       0       0
  1180 ;;Total ram usage:        0 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    1
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           
  1191                           ;psect for function _timer1_init
  1192  025B                     _timer1_init:	
  1193                           
  1194                           ;util.c: 13: T1CONbits.T1CKPS = 0x03;
  1195                           
  1196                           ;incstack = 0
  1197                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
  1198  025B  3030               	movlw	48
  1199  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1200  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1201  025E  0490               	iorwf	16,f	;volatile
  1202                           
  1203                           ;util.c: 14: T1CONbits.TMR1CS = 0;
  1204  025F  1090               	bcf	16,1	;volatile
  1205  0260  0008               	return
  1206  0261                     __end_of_timer1_init:	
  1207                           
  1208                           	psect	text7
  1209  0230                     __ptext7:	
  1210 ;; *************** function _adc_start *****************
  1211 ;; Defined at:
  1212 ;;		line 84 in file "util.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;		None               void
  1219 ;; Registers used:
  1220 ;;		None
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    1
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _adc_start
  1242  0230                     _adc_start:	
  1243                           
  1244                           ;util.c: 85: ADCON0bits.ADON =1;
  1245                           
  1246                           ;incstack = 0
  1247                           ; Regs used in _adc_start: []
  1248  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0232  141F               	bsf	31,0	;volatile
  1251                           
  1252                           ;util.c: 86: ADCON0bits.GO_nDONE = 1;
  1253  0233  151F               	bsf	31,2	;volatile
  1254                           
  1255                           ;util.c: 87: PIE1bits.ADIE =1;
  1256  0234  1683               	bsf	3,5	;RP0=1, select bank1
  1257  0235  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0236  170C               	bsf	12,6	;volatile
  1259                           
  1260                           ;util.c: 88: INTCONbits.GIE =1;
  1261  0237  178B               	bsf	11,7	;volatile
  1262                           
  1263                           ;util.c: 89: INTCONbits.PEIE = 1;
  1264  0238  170B               	bsf	11,6	;volatile
  1265  0239  0008               	return
  1266  023A                     __end_of_adc_start:	
  1267                           
  1268                           	psect	text8
  1269  0210                     __ptext8:	
  1270 ;; *************** function _adc_init_CH0 *****************
  1271 ;; Defined at:
  1272 ;;		line 74 in file "util.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;		None               void
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0
  1289 ;;      Totals:         0       0       0       0       0
  1290 ;;Total ram usage:        0 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _adc_init_CH0
  1302  0210                     _adc_init_CH0:	
  1303                           
  1304                           ;util.c: 75: ADCON0bits.ADCS = 0x00;
  1305                           
  1306                           ;incstack = 0
  1307                           ; Regs used in _adc_init_CH0: [wreg+status,2+status,0]
  1308  0210  303F               	movlw	-193
  1309  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0213  059F               	andwf	31,f	;volatile
  1312                           
  1313                           ;util.c: 76: ADCON0bits.CHS = 0x00;
  1314  0214  30C7               	movlw	-57
  1315  0215  059F               	andwf	31,f	;volatile
  1316                           
  1317                           ;util.c: 78: ADCON1bits.ADFM = 1;
  1318  0216  1683               	bsf	3,5	;RP0=1, select bank1
  1319  0217  1303               	bcf	3,6	;RP1=0, select bank1
  1320  0218  179F               	bsf	31,7	;volatile
  1321                           
  1322                           ;util.c: 79: ADCON1bits.PCFG = 0x00;
  1323  0219  30F0               	movlw	-16
  1324  021A  059F               	andwf	31,f	;volatile
  1325  021B  0008               	return
  1326  021C                     __end_of_adc_init_CH0:	
  1327                           
  1328                           	psect	text9
  1329  01A4                     __ptext9:	
  1330 ;; *************** function _ISR *****************
  1331 ;; Defined at:
  1332 ;;		line 77 in file "main.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;		None               void
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         0       0       0       0       0
  1347 ;;      Locals:         0       0       0       0       0
  1348 ;;      Temps:          6       0       0       0       0
  1349 ;;      Totals:         6       0       0       0       0
  1350 ;;Total ram usage:        6 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		Interrupt level 1
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           
  1360                           ;psect for function _ISR
  1361  01A4                     _ISR:	
  1362                           
  1363                           ;main.c: 82: if(TMR0IF && TMR0IE){
  1364  01A4  190B               	btfsc	11,2	;volatile
  1365  01A5  1E8B               	btfss	11,5	;volatile
  1366  01A6  29AF               	goto	i1l859
  1367                           
  1368                           ;main.c: 83: counter0 ++;
  1369  01A7  3001               	movlw	1
  1370  01A8  07F6               	addwf	_counter0,f	;volatile
  1371  01A9  1803               	skipnc
  1372  01AA  0AF7               	incf	_counter0+1,f	;volatile
  1373  01AB  3000               	movlw	0
  1374  01AC  07F7               	addwf	_counter0+1,f	;volatile
  1375                           
  1376                           ;main.c: 84: PORTC |= (1<<3);
  1377  01AD  1587               	bsf	7,3	;volatile
  1378                           
  1379                           ;main.c: 85: TMR0IF = 0;
  1380  01AE  110B               	bcf	11,2	;volatile
  1381  01AF                     i1l859:	
  1382                           
  1383                           ;main.c: 87: }
  1384                           ;main.c: 90: if(TMR1IE && TMR1IF){
  1385  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1386  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1387  01B1  1C0C               	btfss	12,0	;volatile
  1388  01B2  29D0               	goto	i1l873
  1389  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1390  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1391  01B5  1C0C               	btfss	12,0	;volatile
  1392  01B6  29D0               	goto	i1l873
  1393                           
  1394                           ;main.c: 91: PORTC ^= (1<<3);
  1395  01B7  3008               	movlw	8
  1396  01B8  00F0               	movwf	??_ISR
  1397  01B9  0870               	movf	??_ISR,w
  1398  01BA  0687               	xorwf	7,f	;volatile
  1399                           
  1400                           ;main.c: 92: if(alarmState == 2){
  1401  01BB  3002               	movlw	2
  1402  01BC  0631               	xorwf	_alarmState,w	;volatile
  1403  01BD  1D03               	btfss	3,2
  1404  01BE  29C5               	goto	i1l867
  1405                           
  1406                           ;main.c: 93: counter1 ++;
  1407  01BF  3001               	movlw	1
  1408  01C0  07AD               	addwf	_counter1,f	;volatile
  1409  01C1  1803               	skipnc
  1410  01C2  0AAE               	incf	_counter1+1,f	;volatile
  1411  01C3  3000               	movlw	0
  1412  01C4  07AE               	addwf	_counter1+1,f	;volatile
  1413  01C5                     i1l867:	
  1414                           
  1415                           ;main.c: 94: }
  1416                           ;main.c: 95: if(alarmState == 3){
  1417  01C5  3003               	movlw	3
  1418  01C6  0631               	xorwf	_alarmState,w	;volatile
  1419  01C7  1D03               	btfss	3,2
  1420  01C8  29CF               	goto	i1l871
  1421                           
  1422                           ;main.c: 96: counter1 += 2;
  1423  01C9  3002               	movlw	2
  1424  01CA  07AD               	addwf	_counter1,f	;volatile
  1425  01CB  1803               	skipnc
  1426  01CC  0AAE               	incf	_counter1+1,f	;volatile
  1427  01CD  3000               	movlw	0
  1428  01CE  07AE               	addwf	_counter1+1,f	;volatile
  1429  01CF                     i1l871:	
  1430                           
  1431                           ;main.c: 97: }
  1432                           ;main.c: 98: TMR1IF = 0;
  1433  01CF  100C               	bcf	12,0	;volatile
  1434  01D0                     i1l873:	
  1435                           
  1436                           ;main.c: 99: }
  1437                           ;main.c: 102: if(TMR2IF && TMR2IE){
  1438  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1439  01D1  1C8C               	btfss	12,1	;volatile
  1440  01D2  29E4               	goto	i1l883
  1441  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1442  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1443  01D5  1C8C               	btfss	12,1	;volatile
  1444  01D6  29E4               	goto	i1l883
  1445                           
  1446                           ;main.c: 103: counter2 ++;
  1447  01D7  3001               	movlw	1
  1448  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1449  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1450  01DA  07AF               	addwf	_counter2,f	;volatile
  1451  01DB  1803               	skipnc
  1452  01DC  0AB0               	incf	_counter2+1,f	;volatile
  1453  01DD  3000               	movlw	0
  1454  01DE  07B0               	addwf	_counter2+1,f	;volatile
  1455                           
  1456                           ;main.c: 104: PORTC ^= (1<<3);
  1457  01DF  3008               	movlw	8
  1458  01E0  00F0               	movwf	??_ISR
  1459  01E1  0870               	movf	??_ISR,w
  1460  01E2  0687               	xorwf	7,f	;volatile
  1461                           
  1462                           ;main.c: 105: TMR2IF = 0;
  1463  01E3  108C               	bcf	12,1	;volatile
  1464  01E4                     i1l883:	
  1465                           
  1466                           ;main.c: 106: }
  1467                           ;main.c: 109: if(ADIF && ADIE){
  1468  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1469  01E5  1F0C               	btfss	12,6	;volatile
  1470  01E6  2A04               	goto	i1l77
  1471  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  1472  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  1473  01E9  1F0C               	btfss	12,6	;volatile
  1474  01EA  2A04               	goto	i1l77
  1475                           
  1476                           ;main.c: 110: adcResult = (ADRESH <<8) | (ADRESL);
  1477  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1478  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1479  01ED  081E               	movf	30,w	;volatile
  1480  01EE  00FA               	movwf	_adcResult+1	;volatile
  1481  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  1482  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  1483  01F1  081E               	movf	30,w	;volatile
  1484  01F2  00F9               	movwf	_adcResult	;volatile
  1485                           
  1486                           ;main.c: 111: ALARMTMR = adcResult >> 2;
  1487  01F3  087A               	movf	_adcResult+1,w	;volatile
  1488  01F4  00F1               	movwf	??_ISR+1
  1489  01F5  0879               	movf	_adcResult,w	;volatile
  1490  01F6  00F0               	movwf	??_ISR
  1491  01F7  0D71               	rlf	??_ISR+1,w
  1492  01F8  0CF1               	rrf	??_ISR+1,f
  1493  01F9  0CF0               	rrf	??_ISR,f
  1494  01FA  0D71               	rlf	??_ISR+1,w
  1495  01FB  0CF1               	rrf	??_ISR+1,f
  1496  01FC  0CF0               	rrf	??_ISR,f
  1497  01FD  0870               	movf	??_ISR,w
  1498  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1499  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0200  00B3               	movwf	_ALARMTMR	;volatile
  1501  0201  0871               	movf	??_ISR+1,w
  1502  0202  00B4               	movwf	_ALARMTMR+1	;volatile
  1503                           
  1504                           ;main.c: 112: ADIF = 0;
  1505  0203  130C               	bcf	12,6	;volatile
  1506  0204                     i1l77:	
  1507  0204  0875               	movf	??_ISR+5,w
  1508  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0206  00FF               	movwf	127
  1510  0207  0874               	movf	??_ISR+4,w
  1511  0208  008A               	movwf	10
  1512  0209  0873               	movf	??_ISR+3,w
  1513  020A  0084               	movwf	4
  1514  020B  0E72               	swapf	(??_ISR+2)^(0+-128),w
  1515  020C  0083               	movwf	3
  1516  020D  0EFE               	swapf	126,f
  1517  020E  0E7E               	swapf	126,w
  1518  020F  0009               	retfie
  1519  0210                     __end_of_ISR:	
  1520  007E                     btemp	set	126	;btemp
  1521  007E                     wtemp	set	126
  1522  007E                     wtemp0	set	126
  1523  0080                     wtemp1	set	128
  1524  0082                     wtemp2	set	130
  1525  0084                     wtemp3	set	132
  1526  0086                     wtemp4	set	134
  1527  0088                     wtemp5	set	136
  1528  007F                     wtemp6	set	127
  1529  007E                     ttemp	set	126
  1530  007E                     ttemp0	set	126
  1531  0081                     ttemp1	set	129
  1532  0084                     ttemp2	set	132
  1533  0087                     ttemp3	set	135
  1534  007F                     ttemp4	set	127
  1535  007E                     ltemp	set	126
  1536  007E                     ltemp0	set	126
  1537  0082                     ltemp1	set	130
  1538  0086                     ltemp2	set	134
  1539  0080                     ltemp3	set	128
  1540                           
  1541                           	psect	intentry
  1542  0004                     __pintentry:	
  1543                           ;incstack = 0
  1544                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1545                           
  1546  0004                     interrupt_function:	
  1547  007E                     saved_w	set	btemp
  1548  0004  00FE               	movwf	btemp
  1549  0005  0E03               	swapf	3,w
  1550  0006  00F2               	movwf	??_ISR+2
  1551  0007  0804               	movf	4,w
  1552  0008  00F3               	movwf	??_ISR+3
  1553  0009  080A               	movf	10,w
  1554  000A  00F4               	movwf	??_ISR+4
  1555  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1556  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1557  000D  087F               	movf	btemp+1,w
  1558  000E  00F5               	movwf	??_ISR+5
  1559  000F  120A  118A  29A4   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    4
    Data        4
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     13      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13     9      4     377
                                              0 BANK0     13     9      4
                       _adc_init_CH0
                          _adc_start
                        _timer1_init
                       _timer1_start
                        _timer1_stop
                        _timer2_init
                       _timer2_start
                        _timer2_stop
 ---------------------------------------------------------------------------------
 (1) _timer2_stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer2_start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init_CH0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init_CH0
   _adc_start
   _timer1_init
   _timer1_start
   _timer1_stop
   _timer2_init
   _timer2_start
   _timer2_stop

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue May 26 21:18:42 2015

                        pc 0002                __CFG_CP$OFF 0000                         fsr 0004  
             __CFG_CPD$OFF 0000                        _ISR 01A4                        u715 00DB  
                      u815 0173                        u825 0199                        u675 00A1  
                      u775 012E                __CFG_WRT$ON 0000                        fsr0 0004  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       ?_ISR 0070  
                     l1103 00AF                       l1113 00C0                       l1141 010E  
                     l1125 00EB                       l1143 0113                       l1135 0102  
                     l1071 006F                       l1153 0144                       l1081 0083  
                     l1159 0150                       l1079 007F                       l1169 0169  
                     l1179 0188                       _ADIE 0466                       _ADIF 0066  
                     i1l77 0204      __size_of_adc_init_CH0 000C               main@adcDelay 0028  
                     _main 0038                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0012                       ttemp 007E  
                     wtemp 007E                      ??_ISR 0070                      ?_main 0020  
            __CFG_WDTE$OFF 0000                      i1l871 01CF                      i1l873 01D0  
                    i1l883 01E4                      i1l867 01C5                      i1l859 01AF  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _TRISB 0086                      _TRISC 0087               _adc_init_CH0 0210  
                    main@i 002A                      pclath 000A                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            __initialization 0015               __end_of_main 01A4  
                   ??_main 0024                     _ADRESH 001E                     _ADRESL 009E  
                   _TMR0IE 005D                     _TMR0IF 005A                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR2IE 0461                     _TMR2IF 0061  
           __CFG_PWRTE$OFF 0000               ?_timer1_init 0070               ?_timer2_init 0070  
             ?_timer1_stop 0070               ?_timer2_stop 0070               __pdataCOMMON 0079  
                   saved_w 007E    __end_of__initialization 0034         __size_of_adc_start 000A  
           __pcstackCOMMON 0070               __pidataBANK0 0263             _OPTION_REGbits 0081  
               __pbssBANK0 002D                 _alarmState 0031                 __pmaintext 0038  
               __pintentry 0004          __end_of_adc_start 023A                 __stringtab 021C  
        _FILTERTMR_ISEMPTY 0222             main@lvlOneRead 0027       __size_of_timer1_init 0006  
                  __ptext1 0254                    __ptext2 023A                    __ptext3 0243  
                  __ptext4 024C                    __ptext5 0226                    __ptext6 025B  
                  __ptext7 0230                    __ptext8 0210                    __ptext9 01A4  
     __size_of_timer2_init 0009       __size_of_timer1_stop 0008       __size_of_timer2_stop 0007  
            ?_timer1_start 0070             main@lvlTwoRead 002C              ?_timer2_start 0070  
             __size_of_ISR 006C                  _T1CONbits 0010                  _T2CONbits 0012  
           main@sensorRead 0029       end_of_initialization 0034  __end_of_FILTERTMR_ISEMPTY 0224  
           ??_timer1_start 0020             ??_timer2_start 0020              __pidataCOMMON 0261  
      start_initialization 0015                __end_of_ISR 0210                __pdataBANK0 0033  
            ?_adc_init_CH0 0070                __pbssCOMMON 0076                  ___latbits 0002  
                _adcResult 0079              __pcstackBANK0 0020                  _adc_start 0230  
     __end_of_timer1_start 0230       __end_of_timer2_start 0243                  __pstrings 021C  
           ??_adc_init_CH0 0020                   _ALARMTMR 0033           _FILTERTMR_ISFULL 0224  
               ?_adc_start 0070          interrupt_function 0004                   _PIE1bits 008C  
            ??_timer1_init 0020              ??_timer2_init 0020              ??_timer1_stop 0020  
            ??_timer2_stop 0020                 _ADCON0bits 001F                __stringbase 0221  
               _ADCON1bits 009F         __end_of__stringtab 0222        __end_of_timer1_init 0261  
      __end_of_timer2_init 024C        __end_of_timer1_stop 0254        __end_of_timer2_stop 025B  
              ??_adc_start 0020      __size_of_timer1_start 000A      __size_of_timer2_start 0009  
                 _counter0 0076                   _counter1 002D                   _counter2 002F  
            __size_of_main 016C       __end_of_adc_init_CH0 021C                   main@argc 0020  
                 main@argv 0022                _lvlOneState 0078               _timer1_start 0226  
             _timer2_start 023A                 _INTCONbits 000B                   intlevel1 0000  
              _lvlTwoState 0032                  stringcode 021C   __end_of_FILTERTMR_ISFULL 0226  
              _timer1_init 025B                _timer2_init 0243                _timer1_stop 024C  
              _timer2_stop 0254                   stringdir 021C                   stringtab 021C  
