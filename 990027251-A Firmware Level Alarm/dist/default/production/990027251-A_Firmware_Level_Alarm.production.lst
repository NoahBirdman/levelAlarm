

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue May 26 03:32:11 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F876
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000D                     	;# 
    36  000E                     	;# 
    37  000E                     	;# 
    38  000F                     	;# 
    39  0010                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0014                     	;# 
    44  0015                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  001D                     	;# 
    55  001E                     	;# 
    56  001F                     	;# 
    57  0081                     	;# 
    58  0085                     	;# 
    59  0086                     	;# 
    60  0087                     	;# 
    61  008C                     	;# 
    62  008D                     	;# 
    63  008E                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0094                     	;# 
    68  0098                     	;# 
    69  0099                     	;# 
    70  009E                     	;# 
    71  009F                     	;# 
    72  010C                     	;# 
    73  010D                     	;# 
    74  010E                     	;# 
    75  010F                     	;# 
    76  018C                     	;# 
    77  018D                     	;# 
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132                           
   133                           	psect	idataBANK0
   134  0239                     __pidataBANK0:	
   135                           
   136                           ;initializer for _ALARMTMR
   137  0239  3464               	retlw	100
   138  023A  3400               	retlw	0
   139                           
   140                           	psect	strings
   141  01F4                     __pstrings:	
   142  01F4                     stringtab:	
   143  01F4                     __stringtab:	
   144  01F4                     stringcode:	
   145                           ;	String table - string pointers are 1 byte each
   146                           
   147  01F4                     stringdir:	
   148  01F4  3001               	movlw	high stringdir
   149  01F5  008A               	movwf	10
   150  01F6  0804               	movf	4,w
   151  01F7  0A84               	incf	4,f
   152  01F8  0782               	addwf	2,f
   153  01F9                     __stringbase:	
   154  01F9  3400               	retlw	0
   155  01FA                     __end_of__stringtab:	
   156  01FA                     _FILTERTMR_ISEMPTY:	
   157  01FA  3432               	retlw	50
   158  01FB  3400               	retlw	0
   159  01FC                     __end_of_FILTERTMR_ISEMPTY:	
   160  01FC                     _FILTERTMR_ISFULL:	
   161  01FC  3432               	retlw	50
   162  01FD  3400               	retlw	0
   163  01FE                     __end_of_FILTERTMR_ISFULL:	
   164  001F                     _ADCON0bits	set	31
   165  001E                     _ADRESH	set	30
   166  000B                     _INTCONbits	set	11
   167  0005                     _PORTA	set	5
   168  0006                     _PORTB	set	6
   169  0007                     _PORTC	set	7
   170  0010                     _T1CONbits	set	16
   171  0012                     _T2CONbits	set	18
   172  0066                     _ADIF	set	102
   173  0060                     _TMR1IF	set	96
   174  0061                     _TMR2IF	set	97
   175  009F                     _ADCON1bits	set	159
   176  009E                     _ADRESL	set	158
   177  0081                     _OPTION_REGbits	set	129
   178  008C                     _PIE1bits	set	140
   179  0086                     _TRISB	set	134
   180  0087                     _TRISC	set	135
   181  0466                     _ADIE	set	1126
   182  0460                     _TMR1IE	set	1120
   183  0461                     _TMR2IE	set	1121
   184                           
   185                           ; #config settings
   186  0000                     
   187                           	psect	cinit
   188  0015                     start_initialization:	
   189  0015                     __initialization:	
   190                           
   191                           ; Clear objects allocated to COMMON
   192  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   193  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   194  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   195  0018  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   196  0019  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   197                           
   198                           ; Clear objects allocated to BANK0
   199  001A  01AC               	clrf	__pbssBANK0& (0+127)
   200  001B  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   201  001C  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   202  001D  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   203  001E  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   204  001F  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   205                           
   206                           ; Initialize objects allocated to BANK0
   207  0020  120A  118A  2239  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   208  0025  00B2               	movwf	__pdataBANK0& (0+127)
   209  0026  120A  118A  223A   	fcall	__pidataBANK0+1	;fetch initializer
   210  0029  00B3               	movwf	(__pdataBANK0+1)& (0+127)
   211  002A                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214  002A                     __end_of__initialization:	
   215  002A  0183               	clrf	3
   216  002B  120A  118A  282E   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	bssCOMMON
   219  0076                     __pbssCOMMON:	
   220  0076                     _adcResult:	
   221  0076                     	ds	2
   222  0078                     _counter0:	
   223  0078                     	ds	2
   224  007A                     _lvlOneState:	
   225  007A                     	ds	1
   226                           
   227                           	psect	bssBANK0
   228  002C                     __pbssBANK0:	
   229  002C                     _counter1:	
   230  002C                     	ds	2
   231  002E                     _counter2:	
   232  002E                     	ds	2
   233  0030                     _alarmState:	
   234  0030                     	ds	1
   235  0031                     _lvlTwoState:	
   236  0031                     	ds	1
   237                           
   238                           	psect	dataBANK0
   239  0032                     __pdataBANK0:	
   240  0032                     _ALARMTMR:	
   241  0032                     	ds	2
   242                           
   243                           	psect	cstackCOMMON
   244  0070                     __pcstackCOMMON:	
   245  0070                     ?_timer1_init:	
   246  0070                     ?_timer2_init:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_adc_init_CH0:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_timer2_start:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_timer2_stop:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_adc_start:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_timer1_start:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_timer1_stop:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_ISR:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ??_ISR:	
   271                           ; 0 bytes @ 0x0
   272                           
   273                           
   274                           ; 0 bytes @ 0x0
   275  0070                     	ds	6
   276                           
   277                           	psect	cstackBANK0
   278  0020                     __pcstackBANK0:	
   279  0020                     ??_timer1_init:	
   280  0020                     ??_timer2_init:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0020                     ??_adc_init_CH0:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0020                     ??_timer2_start:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0020                     ??_timer2_stop:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0020                     ??_adc_start:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0020                     ??_timer1_start:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0020                     ??_timer1_stop:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0020                     ?_main:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0020                     main@argc:	
   305                           ; 2 bytes @ 0x0
   306                           
   307                           
   308                           ; 2 bytes @ 0x0
   309  0020                     	ds	2
   310  0022                     main@argv:	
   311                           
   312                           ; 2 bytes @ 0x2
   313  0022                     	ds	2
   314  0024                     ??_main:	
   315                           
   316                           ; 0 bytes @ 0x4
   317  0024                     	ds	3
   318  0027                     main@lvlOneRead:	
   319                           
   320                           ; 1 bytes @ 0x7
   321  0027                     	ds	1
   322  0028                     main@sensorRead:	
   323                           
   324                           ; 1 bytes @ 0x8
   325  0028                     	ds	1
   326  0029                     main@i:	
   327                           
   328                           ; 2 bytes @ 0x9
   329  0029                     	ds	2
   330  002B                     main@lvlTwoRead:	
   331                           
   332                           ; 1 bytes @ 0xB
   333  002B                     	ds	1
   334                           
   335                           	psect	maintext
   336  002E                     __pmaintext:	
   337 ;;
   338 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   339 ;;
   340 ;; *************** function _main *****************
   341 ;; Defined at:
   342 ;;		line 119 in file "main.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;  argc            2    0[BANK0 ] int 
   345 ;;  argv            2    2[BANK0 ] PTR PTR unsigned char 
   346 ;; Auto vars:     Size  Location     Type
   347 ;;  i               2    9[BANK0 ] int 
   348 ;;  lvlTwoRead      1   11[BANK0 ] unsigned char 
   349 ;;  sensorRead      1    8[BANK0 ] unsigned char 
   350 ;;  lvlOneRead      1    7[BANK0 ] unsigned char 
   351 ;; Return value:  Size  Location     Type
   352 ;;                  2    0[BANK0 ] int 
   353 ;; Registers used:
   354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : B00/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       4       0       0       0
   361 ;;      Locals:         0       5       0       0       0
   362 ;;      Temps:          0       3       0       0       0
   363 ;;      Totals:         0      12       0       0       0
   364 ;;Total ram usage:       12 bytes
   365 ;; Hardware stack levels required when called:    2
   366 ;; This function calls:
   367 ;;		_adc_init_CH0
   368 ;;		_adc_start
   369 ;;		_timer1_init
   370 ;;		_timer1_start
   371 ;;		_timer1_stop
   372 ;;		_timer2_init
   373 ;;		_timer2_start
   374 ;;		_timer2_stop
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           
   381                           ;psect for function _main
   382  002E                     _main:	
   383                           
   384                           ;main.c: 120: uint8_t sensorRead =0;
   385                           
   386                           ;incstack = 0
   387                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   388  002E  1283               	bcf	3,5	;RP0=0, select bank0
   389  002F  1303               	bcf	3,6	;RP1=0, select bank0
   390  0030  01A8               	clrf	main@sensorRead
   391                           
   392                           ;main.c: 121: uint8_t lvlOneRead = 0;
   393  0031  01A7               	clrf	main@lvlOneRead
   394                           
   395                           ;main.c: 122: uint8_t lvlTwoRead = 0;
   396  0032  01AB               	clrf	main@lvlTwoRead
   397                           
   398                           ;main.c: 124: int i = 0;
   399  0033  01A9               	clrf	main@i
   400  0034  01AA               	clrf	main@i+1
   401                           
   402                           ;main.c: 127: TRISC &= ~((1<<2)|(1<<3));
   403  0035  30F3               	movlw	243
   404  0036  00A4               	movwf	??_main
   405  0037  0824               	movf	??_main,w
   406  0038  1683               	bsf	3,5	;RP0=1, select bank1
   407  0039  1303               	bcf	3,6	;RP1=0, select bank1
   408  003A  0587               	andwf	7,f	;volatile
   409                           
   410                           ;main.c: 128: TRISB |= (1<<4)|(1<<5);
   411  003B  3030               	movlw	48
   412  003C  1283               	bcf	3,5	;RP0=0, select bank0
   413  003D  1303               	bcf	3,6	;RP1=0, select bank0
   414  003E  00A4               	movwf	??_main
   415  003F  0824               	movf	??_main,w
   416  0040  1683               	bsf	3,5	;RP0=1, select bank1
   417  0041  1303               	bcf	3,6	;RP1=0, select bank1
   418  0042  0486               	iorwf	6,f	;volatile
   419                           
   420                           ;main.c: 129: TRISB &= ~((1<<3)|(1<<2));
   421  0043  30F3               	movlw	243
   422  0044  1283               	bcf	3,5	;RP0=0, select bank0
   423  0045  1303               	bcf	3,6	;RP1=0, select bank0
   424  0046  00A4               	movwf	??_main
   425  0047  0824               	movf	??_main,w
   426  0048  1683               	bsf	3,5	;RP0=1, select bank1
   427  0049  1303               	bcf	3,6	;RP1=0, select bank1
   428  004A  0586               	andwf	6,f	;volatile
   429                           
   430                           ;main.c: 130: PORTA |= (1<<0);
   431  004B  1283               	bcf	3,5	;RP0=0, select bank0
   432  004C  1303               	bcf	3,6	;RP1=0, select bank0
   433  004D  1405               	bsf	5,0	;volatile
   434                           
   435                           ;main.c: 132: timer1_init();
   436  004E  120A  118A  2233  120A  118A  	fcall	_timer1_init
   437                           
   438                           ;main.c: 133: timer2_init();
   439  0053  120A  118A  221B  120A  118A  	fcall	_timer2_init
   440                           
   441                           ;main.c: 134: adc_init_CH0();
   442  0058  120A  118A  21E8  120A  118A  	fcall	_adc_init_CH0
   443                           
   444                           ;main.c: 136: PORTC |= (1<<2);
   445  005D  1283               	bcf	3,5	;RP0=0, select bank0
   446  005E  1303               	bcf	3,6	;RP1=0, select bank0
   447  005F  1507               	bsf	7,2	;volatile
   448                           
   449                           ;main.c: 137: PORTB &= ~((1<<2)|(1<<3));
   450  0060  30F3               	movlw	243
   451  0061  00A4               	movwf	??_main
   452  0062  0824               	movf	??_main,w
   453  0063  0586               	andwf	6,f	;volatile
   454  0064                     l1018:	
   455                           ;main.c: 140: while(1){
   456                           
   457                           
   458                           ;main.c: 142: sensorRead = PORTB & ((1<<5) | (1<<4));
   459  0064  1283               	bcf	3,5	;RP0=0, select bank0
   460  0065  1303               	bcf	3,6	;RP1=0, select bank0
   461  0066  0806               	movf	6,w	;volatile
   462  0067  3930               	andlw	48
   463  0068  00A4               	movwf	??_main
   464  0069  0824               	movf	??_main,w
   465  006A  00A8               	movwf	main@sensorRead
   466                           
   467                           ;main.c: 143: lvlOneRead = (sensorRead & (1<<4));
   468  006B  0828               	movf	main@sensorRead,w
   469  006C  3910               	andlw	16
   470  006D  00A4               	movwf	??_main
   471  006E  0824               	movf	??_main,w
   472  006F  00A7               	movwf	main@lvlOneRead
   473                           
   474                           ;main.c: 144: lvlTwoRead = (sensorRead & (1<<5));
   475  0070  0828               	movf	main@sensorRead,w
   476  0071  3920               	andlw	32
   477  0072  00A4               	movwf	??_main
   478  0073  0824               	movf	??_main,w
   479  0074  00AB               	movwf	main@lvlTwoRead
   480                           
   481                           ;main.c: 204: if(lvlTwoState == 0){
   482  0075  0831               	movf	_lvlTwoState,w	;volatile
   483  0076  1D03               	btfss	3,2
   484  0077  2892               	goto	l1040
   485                           
   486                           ;main.c: 206: if((lvlTwoRead > 0) && (counter2 < 1)){
   487  0078  082B               	movf	main@lvlTwoRead,w
   488  0079  1903               	btfsc	3,2
   489  007A  28E8               	goto	l1072
   490  007B  082F               	movf	_counter2+1,w	;volatile
   491  007C  3A80               	xorlw	128
   492  007D  00FF               	movwf	127
   493  007E  3080               	movlw	128
   494  007F  027F               	subwf	127,w
   495  0080  1D03               	skipz
   496  0081  2884               	goto	u575
   497  0082  3001               	movlw	1
   498  0083  022E               	subwf	_counter2,w	;volatile
   499  0084                     u575:	
   500  0084  1803               	skipnc
   501  0085  28E8               	goto	l1072
   502                           
   503                           ;main.c: 207: lvlTwoState = 1;
   504  0086  3001               	movlw	1
   505  0087  1283               	bcf	3,5	;RP0=0, select bank0
   506  0088  1303               	bcf	3,6	;RP1=0, select bank0
   507  0089  00A4               	movwf	??_main
   508  008A  0824               	movf	??_main,w
   509  008B  00B1               	movwf	_lvlTwoState	;volatile
   510                           
   511                           ;main.c: 208: timer2_start();
   512  008C  120A  118A  2212  120A  118A  	fcall	_timer2_start
   513                           
   514                           ;main.c: 210: }else {
   515  0091  2933               	goto	l1094
   516  0092                     l1040:	
   517                           ;main.c: 214: }
   518                           ;main.c: 216: }else if(lvlTwoState == 1){
   519                           
   520                           ;main.c: 213: PORTC &= ~(1<<3);
   521                           
   522                           ;main.c: 212: counter2 = 0;
   523                           
   524                           ;main.c: 211: timer2_stop();
   525                           
   526  0092  0331               	decf	_lvlTwoState,w	;volatile
   527  0093  1D03               	btfss	3,2
   528  0094  28CE               	goto	l1060
   529                           
   530                           ;main.c: 218: if(lvlTwoRead == 0){
   531  0095  082B               	movf	main@lvlTwoRead,w
   532  0096  1D03               	btfss	3,2
   533  0097  28A3               	goto	l1050
   534                           
   535                           ;main.c: 219: counter2 = 0;
   536  0098  01AE               	clrf	_counter2	;volatile
   537  0099  01AF               	clrf	_counter2+1	;volatile
   538                           
   539                           ;main.c: 220: timer2_stop();
   540  009A  120A  118A  222C  120A  118A  	fcall	_timer2_stop
   541                           
   542                           ;main.c: 221: lvlTwoState = 0;
   543  009F  1283               	bcf	3,5	;RP0=0, select bank0
   544  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   545  00A1  01B1               	clrf	_lvlTwoState	;volatile
   546                           
   547                           ;main.c: 223: }else if(lvlTwoRead > 0 && counter2 >= FILTERTMR_ISFULL){
   548  00A2  2933               	goto	l1094
   549  00A3                     l1050:	
   550  00A3  082B               	movf	main@lvlTwoRead,w
   551  00A4  1903               	btfsc	3,2
   552  00A5  2933               	goto	l1094
   553  00A6  3003               	movlw	low (_FILTERTMR_ISFULL-__stringbase)
   554  00A7  0084               	movwf	4
   555  00A8  120A  118A  21F4  120A  118A  	fcall	stringdir
   556  00AD  00A4               	movwf	??_main
   557  00AE  120A  118A  21F4  120A  118A  	fcall	stringdir
   558  00B3  00A5               	movwf	??_main+1
   559  00B4  082F               	movf	_counter2+1,w	;volatile
   560  00B5  3A80               	xorlw	128
   561  00B6  00A6               	movwf	??_main+2
   562  00B7  0825               	movf	??_main+1,w
   563  00B8  3A80               	xorlw	128
   564  00B9  0226               	subwf	??_main+2,w
   565  00BA  1D03               	skipz
   566  00BB  28BE               	goto	u615
   567  00BC  0824               	movf	??_main,w
   568  00BD  022E               	subwf	_counter2,w	;volatile
   569  00BE                     u615:	
   570  00BE  1C03               	skipc
   571  00BF  2933               	goto	l1094
   572                           
   573                           ;main.c: 224: timer2_stop();
   574  00C0  120A  118A  222C  120A  118A  	fcall	_timer2_stop
   575                           
   576                           ;main.c: 225: counter2 = 0;
   577  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   578  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   579  00C7  01AE               	clrf	_counter2	;volatile
   580  00C8  01AF               	clrf	_counter2+1	;volatile
   581                           
   582                           ;main.c: 226: lvlTwoState = 2;
   583  00C9  3002               	movlw	2
   584  00CA  00A4               	movwf	??_main
   585  00CB  0824               	movf	??_main,w
   586  00CC  00B1               	movwf	_lvlTwoState	;volatile
   587                           
   588                           ;main.c: 227: }
   589                           ;main.c: 229: }else if(lvlTwoState == 2){
   590  00CD  2933               	goto	l1094
   591  00CE                     l1060:	
   592  00CE  3002               	movlw	2
   593  00CF  0631               	xorwf	_lvlTwoState,w	;volatile
   594  00D0  1D03               	btfss	3,2
   595  00D1  2927               	goto	l1088
   596                           
   597                           ;main.c: 232: if(lvlTwoRead == 0 && counter2 == 0){
   598  00D2  082B               	movf	main@lvlTwoRead,w
   599  00D3  1D03               	btfss	3,2
   600  00D4  28E5               	goto	l1070
   601  00D5  082E               	movf	_counter2,w	;volatile
   602  00D6  042F               	iorwf	_counter2+1,w	;volatile
   603  00D7  1D03               	btfss	3,2
   604  00D8  28E5               	goto	l1070
   605                           
   606                           ;main.c: 233: timer2_start();
   607  00D9  120A  118A  2212  120A  118A  	fcall	_timer2_start
   608                           
   609                           ;main.c: 234: counter2 = 1;
   610  00DE  3001               	movlw	1
   611  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   612  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   613  00E1  00AE               	movwf	_counter2	;volatile
   614  00E2  3000               	movlw	0
   615  00E3  00AF               	movwf	_counter2+1	;volatile
   616                           
   617                           ;main.c: 237: }else if(lvlTwoRead > 0){
   618  00E4  2933               	goto	l1094
   619  00E5                     l1070:	
   620  00E5  082B               	movf	main@lvlTwoRead,w
   621  00E6  1903               	btfsc	3,2
   622  00E7  28F6               	goto	l1078
   623  00E8                     l1072:	
   624                           
   625                           ;main.c: 238: timer2_stop();
   626  00E8  120A  118A  222C  120A  118A  	fcall	_timer2_stop
   627                           
   628                           ;main.c: 239: counter2 = 0;
   629  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   630  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   631  00EF  01AE               	clrf	_counter2	;volatile
   632  00F0  01AF               	clrf	_counter2+1	;volatile
   633                           
   634                           ;main.c: 240: PORTC &= ~(1<<3);
   635  00F1  30F7               	movlw	247
   636  00F2  00A4               	movwf	??_main
   637  00F3  0824               	movf	??_main,w
   638  00F4  0587               	andwf	7,f	;volatile
   639                           
   640                           ;main.c: 242: }else if(lvlTwoRead == 0 && counter2 > FILTERTMR_ISEMPTY){
   641  00F5  2933               	goto	l1094
   642  00F6                     l1078:	
   643  00F6  082B               	movf	main@lvlTwoRead,w
   644  00F7  1D03               	btfss	3,2
   645  00F8  2933               	goto	l1094
   646  00F9  3001               	movlw	low (_FILTERTMR_ISEMPTY-__stringbase)
   647  00FA  0084               	movwf	4
   648  00FB  120A  118A  21F4  120A  118A  	fcall	stringdir
   649  0100  00A4               	movwf	??_main
   650  0101  120A  118A  21F4  120A  118A  	fcall	stringdir
   651  0106  00A5               	movwf	??_main+1
   652  0107  0825               	movf	??_main+1,w
   653  0108  3A80               	xorlw	128
   654  0109  00A6               	movwf	??_main+2
   655  010A  082F               	movf	_counter2+1,w	;volatile
   656  010B  3A80               	xorlw	128
   657  010C  0226               	subwf	??_main+2,w
   658  010D  1D03               	skipz
   659  010E  2911               	goto	u675
   660  010F  082E               	movf	_counter2,w	;volatile
   661  0110  0224               	subwf	??_main,w
   662  0111                     u675:	
   663  0111  1803               	skipnc
   664  0112  2933               	goto	l1094
   665                           
   666                           ;main.c: 244: lvlTwoState = 3;
   667  0113  3003               	movlw	3
   668  0114  1283               	bcf	3,5	;RP0=0, select bank0
   669  0115  1303               	bcf	3,6	;RP1=0, select bank0
   670  0116  00A4               	movwf	??_main
   671  0117  0824               	movf	??_main,w
   672  0118  00B1               	movwf	_lvlTwoState	;volatile
   673                           
   674                           ;main.c: 245: alarmState = 1;
   675  0119  3001               	movlw	1
   676  011A  00A4               	movwf	??_main
   677  011B  0824               	movf	??_main,w
   678  011C  00B0               	movwf	_alarmState	;volatile
   679                           
   680                           ;main.c: 246: timer2_stop();
   681  011D  120A  118A  222C  120A  118A  	fcall	_timer2_stop
   682                           
   683                           ;main.c: 247: counter2 = 0;
   684  0122  1283               	bcf	3,5	;RP0=0, select bank0
   685  0123  1303               	bcf	3,6	;RP1=0, select bank0
   686  0124  01AE               	clrf	_counter2	;volatile
   687  0125  01AF               	clrf	_counter2+1	;volatile
   688                           
   689                           ;main.c: 250: }
   690                           ;main.c: 251: }else if(lvlTwoState == 3){
   691                           
   692                           ;main.c: 248: }else{
   693  0126  2933               	goto	l1094
   694  0127                     l1088:	
   695  0127  3003               	movlw	3
   696  0128  0631               	xorwf	_lvlTwoState,w	;volatile
   697  0129  1D03               	btfss	3,2
   698  012A  2933               	goto	l1094
   699                           
   700                           ;main.c: 253: lvlTwoState = 4;
   701  012B  3004               	movlw	4
   702  012C  00A4               	movwf	??_main
   703  012D  0824               	movf	??_main,w
   704  012E  00B1               	movwf	_lvlTwoState	;volatile
   705                           
   706                           ;main.c: 254: alarmState ++;
   707  012F  3001               	movlw	1
   708  0130  00A4               	movwf	??_main
   709  0131  0824               	movf	??_main,w
   710  0132  07B0               	addwf	_alarmState,f	;volatile
   711  0133                     l1094:	
   712                           
   713                           ;main.c: 255: }
   714                           ;main.c: 259: if(alarmState >= 1){
   715  0133  1283               	bcf	3,5	;RP0=0, select bank0
   716  0134  1303               	bcf	3,6	;RP1=0, select bank0
   717  0135  0830               	movf	_alarmState,w	;volatile
   718  0136  1903               	btfsc	3,2
   719  0137  2864               	goto	l1018
   720                           
   721                           ;main.c: 261: if(counter1 == 0){
   722  0138  082C               	movf	_counter1,w	;volatile
   723  0139  042D               	iorwf	_counter1+1,w	;volatile
   724  013A  1D03               	btfss	3,2
   725  013B  294C               	goto	l1104
   726                           
   727                           ;main.c: 262: PORTB |= (1<<3);
   728  013C  1586               	bsf	6,3	;volatile
   729                           
   730                           ;main.c: 263: PORTC |= (1<<3);
   731  013D  1587               	bsf	7,3	;volatile
   732                           
   733                           ;main.c: 264: adc_start();
   734  013E  120A  118A  2208  120A  118A  	fcall	_adc_start
   735                           
   736                           ;main.c: 265: timer1_start();
   737  0143  120A  118A  21FE  120A  118A  	fcall	_timer1_start
   738                           
   739                           ;main.c: 266: counter1 = 1;
   740  0148  3001               	movlw	1
   741  0149  1283               	bcf	3,5	;RP0=0, select bank0
   742  014A  1303               	bcf	3,6	;RP1=0, select bank0
   743  014B  2967               	goto	L1
   744  014C                     l1104:	
   745                           ;main.c: 268: }else if(counter1 >= ALARMTMR){
   746                           
   747  014C  082D               	movf	_counter1+1,w	;volatile
   748  014D  3A80               	xorlw	128
   749  014E  00A4               	movwf	??_main
   750  014F  0833               	movf	_ALARMTMR+1,w	;volatile
   751  0150  3A80               	xorlw	128
   752  0151  0224               	subwf	??_main,w
   753  0152  1D03               	skipz
   754  0153  2956               	goto	u715
   755  0154  0832               	movf	_ALARMTMR,w	;volatile
   756  0155  022C               	subwf	_counter1,w	;volatile
   757  0156                     u715:	
   758  0156  1C03               	skipc
   759  0157  2864               	goto	l1018
   760                           
   761                           ;main.c: 269: PORTB |= (1<<2) |(1<<3);
   762  0158  300C               	movlw	12
   763  0159  1283               	bcf	3,5	;RP0=0, select bank0
   764  015A  1303               	bcf	3,6	;RP1=0, select bank0
   765  015B  00A4               	movwf	??_main
   766  015C  0824               	movf	??_main,w
   767  015D  0486               	iorwf	6,f	;volatile
   768                           
   769                           ;main.c: 270: timer1_stop();
   770  015E  120A  118A  2224  120A  118A  	fcall	_timer1_stop
   771                           
   772                           ;main.c: 271: PORTC |= (1<<3);
   773  0163  1283               	bcf	3,5	;RP0=0, select bank0
   774  0164  1303               	bcf	3,6	;RP1=0, select bank0
   775  0165  1587               	bsf	7,3	;volatile
   776                           
   777                           ;main.c: 272: counter1 = 1;
   778  0166  3001               	movlw	1
   779  0167                     L1:	
   780  0167  00AC               	movwf	_counter1	;volatile
   781  0168  3000               	movlw	0
   782  0169  00AD               	movwf	_counter1+1	;volatile
   783  016A  2864               	goto	l1018
   784  016B                     l1114:	
   785                           ;main.c: 273: }
   786                           ;main.c: 274: }
   787                           ;main.c: 277: }
   788                           ;main.c: 279: while(1){
   789                           
   790                           
   791                           ;main.c: 280: PORTC^=(1<<2);
   792  016B  3004               	movlw	4
   793  016C  1283               	bcf	3,5	;RP0=0, select bank0
   794  016D  1303               	bcf	3,6	;RP1=0, select bank0
   795  016E  00A4               	movwf	??_main
   796  016F  0824               	movf	??_main,w
   797  0170  0687               	xorwf	7,f	;volatile
   798                           
   799                           ;main.c: 281: for(i=0;i<10000;i++);
   800  0171  01A9               	clrf	main@i
   801  0172  01AA               	clrf	main@i+1
   802  0173                     L2:	
   803  0173  082A               	movf	main@i+1,w
   804  0174  3A80               	xorlw	128
   805  0175  00FF               	movwf	127
   806  0176  30A7               	movlw	167
   807  0177  027F               	subwf	127,w
   808  0178  1D03               	skipz
   809  0179  297C               	goto	u725
   810  017A  3010               	movlw	16
   811  017B  0229               	subwf	main@i,w
   812  017C                     u725:	
   813  017C  1803               	btfsc	3,0
   814  017D  296B               	goto	l1114
   815  017E  3001               	movlw	1
   816  017F  1283               	bcf	3,5	;RP0=0, select bank0
   817  0180  1303               	bcf	3,6	;RP1=0, select bank0
   818  0181  07A9               	addwf	main@i,f
   819  0182  1803               	skipnc
   820  0183  0AAA               	incf	main@i+1,f
   821  0184  3000               	movlw	0
   822  0185  07AA               	addwf	main@i+1,f
   823  0186  2973               	goto	L2
   824  0187                     __end_of_main:	
   825                           ;main.c: 283: }
   826                           ;main.c: 284: return (0);
   827                           ;	Return value of _main is never used
   828                           
   829                           
   830                           	psect	text1
   831  022C                     __ptext1:	
   832 ;; *************** function _timer2_stop *****************
   833 ;; Defined at:
   834 ;;		line 48 in file "util.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;		None               void
   841 ;; Registers used:
   842 ;;		None
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       0       0       0       0
   849 ;;      Locals:         0       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0
   851 ;;      Totals:         0       0       0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:    1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _timer2_stop
   864  022C                     _timer2_stop:	
   865                           
   866                           ;util.c: 49: T2CONbits.TMR2ON = 0;
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _timer2_stop: []
   870  022C  1283               	bcf	3,5	;RP0=0, select bank0
   871  022D  1303               	bcf	3,6	;RP1=0, select bank0
   872  022E  1112               	bcf	18,2	;volatile
   873                           
   874                           ;util.c: 50: PIE1bits.TMR2IE = 0;
   875  022F  1683               	bsf	3,5	;RP0=1, select bank1
   876  0230  1303               	bcf	3,6	;RP1=0, select bank1
   877  0231  108C               	bcf	12,1	;volatile
   878  0232  0008               	return
   879  0233                     __end_of_timer2_stop:	
   880                           
   881                           	psect	text2
   882  0212                     __ptext2:	
   883 ;; *************** function _timer2_start *****************
   884 ;; Defined at:
   885 ;;		line 41 in file "util.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;		None               void
   892 ;; Registers used:
   893 ;;		None
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   899 ;;      Params:         0       0       0       0       0
   900 ;;      Locals:         0       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0
   902 ;;      Totals:         0       0       0       0       0
   903 ;;Total ram usage:        0 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function _timer2_start
   915  0212                     _timer2_start:	
   916                           
   917                           ;util.c: 42: PIE1bits.TMR2IE = 1;
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in _timer2_start: []
   921  0212  1683               	bsf	3,5	;RP0=1, select bank1
   922  0213  1303               	bcf	3,6	;RP1=0, select bank1
   923  0214  148C               	bsf	12,1	;volatile
   924                           
   925                           ;util.c: 43: T2CONbits.TMR2ON = 1;
   926  0215  1283               	bcf	3,5	;RP0=0, select bank0
   927  0216  1303               	bcf	3,6	;RP1=0, select bank0
   928  0217  1512               	bsf	18,2	;volatile
   929                           
   930                           ;util.c: 44: INTCONbits.GIE = 1;
   931  0218  178B               	bsf	11,7	;volatile
   932                           
   933                           ;util.c: 45: INTCONbits.PEIE = 1;
   934  0219  170B               	bsf	11,6	;volatile
   935  021A  0008               	return
   936  021B                     __end_of_timer2_start:	
   937                           
   938                           	psect	text3
   939  021B                     __ptext3:	
   940 ;; *************** function _timer2_init *****************
   941 ;; Defined at:
   942 ;;		line 36 in file "util.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;		None               void
   949 ;; Registers used:
   950 ;;		wreg, status,2, status,0
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0
   959 ;;      Totals:         0       0       0       0       0
   960 ;;Total ram usage:        0 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    1
   963 ;; This function calls:
   964 ;;		Nothing
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function _timer2_init
   972  021B                     _timer2_init:	
   973                           
   974                           ;util.c: 37: T2CONbits.T2CKPS = 0x02;
   975                           
   976                           ;incstack = 0
   977                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
   978  021B  1283               	bcf	3,5	;RP0=0, select bank0
   979  021C  1303               	bcf	3,6	;RP1=0, select bank0
   980  021D  0812               	movf	18,w	;volatile
   981  021E  39FC               	andlw	-4
   982  021F  3802               	iorlw	2
   983  0220  0092               	movwf	18	;volatile
   984                           
   985                           ;util.c: 38: T2CONbits.TOUTPS = 0x0F;
   986  0221  3078               	movlw	120
   987  0222  0492               	iorwf	18,f	;volatile
   988  0223  0008               	return
   989  0224                     __end_of_timer2_init:	
   990                           
   991                           	psect	text4
   992  0224                     __ptext4:	
   993 ;; *************** function _timer1_stop *****************
   994 ;; Defined at:
   995 ;;		line 28 in file "util.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;		None               void
  1002 ;; Registers used:
  1003 ;;		None
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    1
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _timer1_stop
  1025  0224                     _timer1_stop:	
  1026                           
  1027                           ;util.c: 29: T1CONbits.TMR1ON = 0;
  1028                           
  1029                           ;incstack = 0
  1030                           ; Regs used in _timer1_stop: []
  1031  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0226  1010               	bcf	16,0	;volatile
  1034                           
  1035                           ;util.c: 30: T1CONbits.T1OSCEN =0;
  1036  0227  1190               	bcf	16,3	;volatile
  1037                           
  1038                           ;util.c: 31: PIE1bits.TMR1IE = 0;
  1039  0228  1683               	bsf	3,5	;RP0=1, select bank1
  1040  0229  1303               	bcf	3,6	;RP1=0, select bank1
  1041  022A  100C               	bcf	12,0	;volatile
  1042  022B  0008               	return
  1043  022C                     __end_of_timer1_stop:	
  1044                           
  1045                           	psect	text5
  1046  01FE                     __ptext5:	
  1047 ;; *************** function _timer1_start *****************
  1048 ;; Defined at:
  1049 ;;		line 18 in file "util.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;		None               void
  1056 ;; Registers used:
  1057 ;;		None
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0
  1066 ;;      Totals:         0       0       0       0       0
  1067 ;;Total ram usage:        0 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _timer1_start
  1079  01FE                     _timer1_start:	
  1080                           
  1081                           ;util.c: 19: T1CONbits.T1OSCEN = 1;
  1082                           
  1083                           ;incstack = 0
  1084                           ; Regs used in _timer1_start: []
  1085  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1086  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0200  1590               	bsf	16,3	;volatile
  1088                           
  1089                           ;util.c: 20: T1CONbits.TMR1ON = 1;
  1090  0201  1410               	bsf	16,0	;volatile
  1091                           
  1092                           ;util.c: 21: PIE1bits.TMR1IE = 1;
  1093  0202  1683               	bsf	3,5	;RP0=1, select bank1
  1094  0203  1303               	bcf	3,6	;RP1=0, select bank1
  1095  0204  140C               	bsf	12,0	;volatile
  1096                           
  1097                           ;util.c: 22: INTCONbits.GIE = 1;
  1098  0205  178B               	bsf	11,7	;volatile
  1099                           
  1100                           ;util.c: 23: INTCONbits.PEIE = 1;
  1101  0206  170B               	bsf	11,6	;volatile
  1102  0207  0008               	return
  1103  0208                     __end_of_timer1_start:	
  1104                           
  1105                           	psect	text6
  1106  0233                     __ptext6:	
  1107 ;; *************** function _timer1_init *****************
  1108 ;; Defined at:
  1109 ;;		line 7 in file "util.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;		None               void
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _timer1_init
  1139  0233                     _timer1_init:	
  1140                           
  1141                           ;util.c: 13: T1CONbits.T1CKPS = 0x03;
  1142                           
  1143                           ;incstack = 0
  1144                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
  1145  0233  3030               	movlw	48
  1146  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0235  1303               	bcf	3,6	;RP1=0, select bank0
  1148  0236  0490               	iorwf	16,f	;volatile
  1149                           
  1150                           ;util.c: 14: T1CONbits.TMR1CS = 0;
  1151  0237  1090               	bcf	16,1	;volatile
  1152  0238  0008               	return
  1153  0239                     __end_of_timer1_init:	
  1154                           
  1155                           	psect	text7
  1156  0208                     __ptext7:	
  1157 ;; *************** function _adc_start *****************
  1158 ;; Defined at:
  1159 ;;		line 84 in file "util.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;		None               void
  1166 ;; Registers used:
  1167 ;;		None
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0
  1176 ;;      Totals:         0       0       0       0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _adc_start
  1189  0208                     _adc_start:	
  1190                           
  1191                           ;util.c: 85: ADCON0bits.ADON =1;
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _adc_start: []
  1195  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1197  020A  141F               	bsf	31,0	;volatile
  1198                           
  1199                           ;util.c: 86: ADCON0bits.GO_nDONE = 1;
  1200  020B  151F               	bsf	31,2	;volatile
  1201                           
  1202                           ;util.c: 87: PIE1bits.ADIE =1;
  1203  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1204  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1205  020E  170C               	bsf	12,6	;volatile
  1206                           
  1207                           ;util.c: 88: INTCONbits.GIE =1;
  1208  020F  178B               	bsf	11,7	;volatile
  1209                           
  1210                           ;util.c: 89: INTCONbits.PEIE = 1;
  1211  0210  170B               	bsf	11,6	;volatile
  1212  0211  0008               	return
  1213  0212                     __end_of_adc_start:	
  1214                           
  1215                           	psect	text8
  1216  01E8                     __ptext8:	
  1217 ;; *************** function _adc_init_CH0 *****************
  1218 ;; Defined at:
  1219 ;;		line 74 in file "util.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;		None               void
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1233 ;;      Params:         0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0
  1236 ;;      Totals:         0       0       0       0       0
  1237 ;;Total ram usage:        0 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    1
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           
  1248                           ;psect for function _adc_init_CH0
  1249  01E8                     _adc_init_CH0:	
  1250                           
  1251                           ;util.c: 75: ADCON0bits.ADCS = 0x00;
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _adc_init_CH0: [wreg+status,2+status,0]
  1255  01E8  303F               	movlw	-193
  1256  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1257  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1258  01EB  059F               	andwf	31,f	;volatile
  1259                           
  1260                           ;util.c: 76: ADCON0bits.CHS = 0x00;
  1261  01EC  30C7               	movlw	-57
  1262  01ED  059F               	andwf	31,f	;volatile
  1263                           
  1264                           ;util.c: 78: ADCON1bits.ADFM = 1;
  1265  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  1266  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  1267  01F0  179F               	bsf	31,7	;volatile
  1268                           
  1269                           ;util.c: 79: ADCON1bits.PCFG = 0x00;
  1270  01F1  30F0               	movlw	-16
  1271  01F2  059F               	andwf	31,f	;volatile
  1272  01F3  0008               	return
  1273  01F4                     __end_of_adc_init_CH0:	
  1274                           
  1275                           	psect	text9
  1276  0187                     __ptext9:	
  1277 ;; *************** function _ISR *****************
  1278 ;; Defined at:
  1279 ;;		line 77 in file "main.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;		None               void
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1293 ;;      Params:         0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0
  1295 ;;      Temps:          6       0       0       0       0
  1296 ;;      Totals:         6       0       0       0       0
  1297 ;;Total ram usage:        6 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		Interrupt level 1
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           
  1307                           ;psect for function _ISR
  1308  0187                     _ISR:	
  1309                           
  1310                           ;main.c: 82: if(TMR1IE && TMR1IF){
  1311  0187  1683               	bsf	3,5	;RP0=1, select bank1
  1312  0188  1303               	bcf	3,6	;RP1=0, select bank1
  1313  0189  1C0C               	btfss	12,0	;volatile
  1314  018A  29A8               	goto	i1l832
  1315  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1316  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1317  018D  1C0C               	btfss	12,0	;volatile
  1318  018E  29A8               	goto	i1l832
  1319                           
  1320                           ;main.c: 83: PORTC ^= (1<<3);
  1321  018F  3008               	movlw	8
  1322  0190  00F0               	movwf	??_ISR
  1323  0191  0870               	movf	??_ISR,w
  1324  0192  0687               	xorwf	7,f	;volatile
  1325                           
  1326                           ;main.c: 84: if(alarmState == 2){
  1327  0193  3002               	movlw	2
  1328  0194  0630               	xorwf	_alarmState,w	;volatile
  1329  0195  1D03               	btfss	3,2
  1330  0196  299D               	goto	i1l826
  1331                           
  1332                           ;main.c: 85: counter1 ++;
  1333  0197  3001               	movlw	1
  1334  0198  07AC               	addwf	_counter1,f	;volatile
  1335  0199  1803               	skipnc
  1336  019A  0AAD               	incf	_counter1+1,f	;volatile
  1337  019B  3000               	movlw	0
  1338  019C  07AD               	addwf	_counter1+1,f	;volatile
  1339  019D                     i1l826:	
  1340                           
  1341                           ;main.c: 86: }
  1342                           ;main.c: 87: if(alarmState == 3){
  1343  019D  3003               	movlw	3
  1344  019E  0630               	xorwf	_alarmState,w	;volatile
  1345  019F  1D03               	btfss	3,2
  1346  01A0  29A7               	goto	i1l830
  1347                           
  1348                           ;main.c: 88: counter1 += 2;
  1349  01A1  3002               	movlw	2
  1350  01A2  07AC               	addwf	_counter1,f	;volatile
  1351  01A3  1803               	skipnc
  1352  01A4  0AAD               	incf	_counter1+1,f	;volatile
  1353  01A5  3000               	movlw	0
  1354  01A6  07AD               	addwf	_counter1+1,f	;volatile
  1355  01A7                     i1l830:	
  1356                           
  1357                           ;main.c: 89: }
  1358                           ;main.c: 90: TMR1IF = 0;
  1359  01A7  100C               	bcf	12,0	;volatile
  1360  01A8                     i1l832:	
  1361                           
  1362                           ;main.c: 91: }
  1363                           ;main.c: 94: if(TMR2IF && TMR2IE){
  1364  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1365  01A9  1C8C               	btfss	12,1	;volatile
  1366  01AA  29BC               	goto	i1l842
  1367  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1368  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1369  01AD  1C8C               	btfss	12,1	;volatile
  1370  01AE  29BC               	goto	i1l842
  1371                           
  1372                           ;main.c: 95: counter2 ++;
  1373  01AF  3001               	movlw	1
  1374  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1375  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1376  01B2  07AE               	addwf	_counter2,f	;volatile
  1377  01B3  1803               	skipnc
  1378  01B4  0AAF               	incf	_counter2+1,f	;volatile
  1379  01B5  3000               	movlw	0
  1380  01B6  07AF               	addwf	_counter2+1,f	;volatile
  1381                           
  1382                           ;main.c: 96: PORTC ^= (1<<3);
  1383  01B7  3008               	movlw	8
  1384  01B8  00F0               	movwf	??_ISR
  1385  01B9  0870               	movf	??_ISR,w
  1386  01BA  0687               	xorwf	7,f	;volatile
  1387                           
  1388                           ;main.c: 97: TMR2IF = 0;
  1389  01BB  108C               	bcf	12,1	;volatile
  1390  01BC                     i1l842:	
  1391                           
  1392                           ;main.c: 98: }
  1393                           ;main.c: 101: if(ADIF && ADIE){
  1394  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1395  01BD  1F0C               	btfss	12,6	;volatile
  1396  01BE  29DC               	goto	i1l70
  1397  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  1398  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  1399  01C1  1F0C               	btfss	12,6	;volatile
  1400  01C2  29DC               	goto	i1l70
  1401                           
  1402                           ;main.c: 102: adcResult = (ADRESH <<8) | (ADRESL);
  1403  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1404  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1405  01C5  081E               	movf	30,w	;volatile
  1406  01C6  00F7               	movwf	_adcResult+1	;volatile
  1407  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  1408  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  1409  01C9  081E               	movf	30,w	;volatile
  1410  01CA  00F6               	movwf	_adcResult	;volatile
  1411                           
  1412                           ;main.c: 103: ALARMTMR = adcResult >> 2;
  1413  01CB  0877               	movf	_adcResult+1,w	;volatile
  1414  01CC  00F1               	movwf	??_ISR+1
  1415  01CD  0876               	movf	_adcResult,w	;volatile
  1416  01CE  00F0               	movwf	??_ISR
  1417  01CF  0D71               	rlf	??_ISR+1,w
  1418  01D0  0CF1               	rrf	??_ISR+1,f
  1419  01D1  0CF0               	rrf	??_ISR,f
  1420  01D2  0D71               	rlf	??_ISR+1,w
  1421  01D3  0CF1               	rrf	??_ISR+1,f
  1422  01D4  0CF0               	rrf	??_ISR,f
  1423  01D5  0870               	movf	??_ISR,w
  1424  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1425  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1426  01D8  00B2               	movwf	_ALARMTMR	;volatile
  1427  01D9  0871               	movf	??_ISR+1,w
  1428  01DA  00B3               	movwf	_ALARMTMR+1	;volatile
  1429                           
  1430                           ;main.c: 104: ADIF = 0;
  1431  01DB  130C               	bcf	12,6	;volatile
  1432  01DC                     i1l70:	
  1433  01DC  0875               	movf	??_ISR+5,w
  1434  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1435  01DE  00FF               	movwf	127
  1436  01DF  0874               	movf	??_ISR+4,w
  1437  01E0  008A               	movwf	10
  1438  01E1  0873               	movf	??_ISR+3,w
  1439  01E2  0084               	movwf	4
  1440  01E3  0E72               	swapf	(??_ISR+2)^(0+-128),w
  1441  01E4  0083               	movwf	3
  1442  01E5  0EFE               	swapf	126,f
  1443  01E6  0E7E               	swapf	126,w
  1444  01E7  0009               	retfie
  1445  01E8                     __end_of_ISR:	
  1446  007E                     btemp	set	126	;btemp
  1447  007E                     wtemp	set	126
  1448  007E                     wtemp0	set	126
  1449  0080                     wtemp1	set	128
  1450  0082                     wtemp2	set	130
  1451  0084                     wtemp3	set	132
  1452  0086                     wtemp4	set	134
  1453  0088                     wtemp5	set	136
  1454  007F                     wtemp6	set	127
  1455  007E                     ttemp	set	126
  1456  007E                     ttemp0	set	126
  1457  0081                     ttemp1	set	129
  1458  0084                     ttemp2	set	132
  1459  0087                     ttemp3	set	135
  1460  007F                     ttemp4	set	127
  1461  007E                     ltemp	set	126
  1462  007E                     ltemp0	set	126
  1463  0082                     ltemp1	set	130
  1464  0086                     ltemp2	set	134
  1465  0080                     ltemp3	set	128
  1466                           
  1467                           	psect	intentry
  1468  0004                     __pintentry:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1471                           
  1472  0004                     interrupt_function:	
  1473  007E                     saved_w	set	btemp
  1474  0004  00FE               	movwf	btemp
  1475  0005  0E03               	swapf	3,w
  1476  0006  00F2               	movwf	??_ISR+2
  1477  0007  0804               	movf	4,w
  1478  0008  00F3               	movwf	??_ISR+3
  1479  0009  080A               	movf	10,w
  1480  000A  00F4               	movwf	??_ISR+4
  1481  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1482  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1483  000D  087F               	movf	btemp+1,w
  1484  000E  00F5               	movwf	??_ISR+5
  1485  000F  120A  118A  2987   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    4
    Data        2
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     12      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12     8      4     337
                                              0 BANK0     12     8      4
                       _adc_init_CH0
                          _adc_start
                        _timer1_init
                       _timer1_start
                        _timer1_stop
                        _timer2_init
                       _timer2_start
                        _timer2_stop
 ---------------------------------------------------------------------------------
 (1) _timer2_stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer2_start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init_CH0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init_CH0
   _adc_start
   _timer1_init
   _timer1_start
   _timer1_stop
   _timer2_init
   _timer2_start
   _timer2_stop

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue May 26 03:32:11 2015

                        pc 0002                __CFG_CP$OFF 0000                         fsr 0004  
             __CFG_CPD$OFF 0000                        _ISR 0187                        u615 00BE  
                      u715 0156                        u725 017C                        u575 0084  
                      u675 0111                __CFG_WRT$ON 0000                        fsr0 0004  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       ?_ISR 0070  
                     l1104 014C                       l1040 0092                       l1114 016B  
                     l1050 00A3                       l1018 0064                       l1060 00CE  
                     l1070 00E5                       l1072 00E8                       l1078 00F6  
                     l1094 0133                       l1088 0127                       _ADIE 0466  
                     _ADIF 0066                       i1l70 01DC      __size_of_adc_init_CH0 000C  
                     _main 002E                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0012                       ttemp 007E  
                     wtemp 007E                      ??_ISR 0070                      ?_main 0020  
            __CFG_WDTE$OFF 0000                      i1l830 01A7                      i1l832 01A8  
                    i1l842 01BC                      i1l826 019D                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _TRISB 0086  
                    _TRISC 0087               _adc_init_CH0 01E8                      main@i 0029  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
          __initialization 0015               __end_of_main 0187                     ??_main 0024  
                   _ADRESH 001E                     _ADRESL 009E                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR2IE 0461                     _TMR2IF 0061  
           __CFG_PWRTE$OFF 0000               ?_timer1_init 0070               ?_timer2_init 0070  
             ?_timer1_stop 0070               ?_timer2_stop 0070                     saved_w 007E  
  __end_of__initialization 002A         __size_of_adc_start 000A             __pcstackCOMMON 0070  
             __pidataBANK0 0239             _OPTION_REGbits 0081                 __pbssBANK0 002C  
               _alarmState 0030                 __pmaintext 002E                 __pintentry 0004  
        __end_of_adc_start 0212                 __stringtab 01F4          _FILTERTMR_ISEMPTY 01FA  
           main@lvlOneRead 0027       __size_of_timer1_init 0006                    __ptext1 022C  
                  __ptext2 0212                    __ptext3 021B                    __ptext4 0224  
                  __ptext5 01FE                    __ptext6 0233                    __ptext7 0208  
                  __ptext8 01E8                    __ptext9 0187       __size_of_timer2_init 0009  
     __size_of_timer1_stop 0008       __size_of_timer2_stop 0007              ?_timer1_start 0070  
           main@lvlTwoRead 002B              ?_timer2_start 0070               __size_of_ISR 0061  
                _T1CONbits 0010                  _T2CONbits 0012             main@sensorRead 0028  
     end_of_initialization 002A  __end_of_FILTERTMR_ISEMPTY 01FC             ??_timer1_start 0020  
           ??_timer2_start 0020        start_initialization 0015                __end_of_ISR 01E8  
              __pdataBANK0 0032              ?_adc_init_CH0 0070                __pbssCOMMON 0076  
                ___latbits 0002                  _adcResult 0076              __pcstackBANK0 0020  
                _adc_start 0208       __end_of_timer1_start 0208       __end_of_timer2_start 021B  
                __pstrings 01F4             ??_adc_init_CH0 0020                   _ALARMTMR 0032  
         _FILTERTMR_ISFULL 01FC                 ?_adc_start 0070          interrupt_function 0004  
                 _PIE1bits 008C              ??_timer1_init 0020              ??_timer2_init 0020  
            ??_timer1_stop 0020              ??_timer2_stop 0020                 _ADCON0bits 001F  
              __stringbase 01F9                 _ADCON1bits 009F         __end_of__stringtab 01FA  
      __end_of_timer1_init 0239        __end_of_timer2_init 0224        __end_of_timer1_stop 022C  
      __end_of_timer2_stop 0233                ??_adc_start 0020      __size_of_timer1_start 000A  
    __size_of_timer2_start 0009                   _counter0 0078                   _counter1 002C  
                 _counter2 002E              __size_of_main 0159       __end_of_adc_init_CH0 01F4  
                 main@argc 0020                   main@argv 0022                _lvlOneState 007A  
             _timer1_start 01FE               _timer2_start 0212                 _INTCONbits 000B  
                 intlevel1 0000                _lvlTwoState 0031                  stringcode 01F4  
 __end_of_FILTERTMR_ISFULL 01FE                _timer1_init 0233                _timer2_init 021B  
              _timer1_stop 0224                _timer2_stop 022C                   stringdir 01F4  
                 stringtab 01F4  
